import{x as v,G as d,H as h}from"./symbols-5f42cb0e.js";import{c as C,a as $}from"./devEnvironmentUtils-5002a058.js";import{a as N}from"./Error-5cdd6e0a.js";import{c as F,r as S}from"./typedArrayUtil-bf9f210a.js";import{L as u,c as U}from"./request-09e7d9b2.js";import{b as w}from"./Portal-8dfa7a94.js";import{c as g}from"./persistableUrlUtils-3635dccc.js";import{y as D}from"./jsonUtils-27937179.js";import{p as G,b as H,j as P,d as j,U as L}from"./styleUtils-689841ac.js";import"./ArrayPool-b51874dd.js";import"./string-53224faa.js";import"./jsonMap-ffa742d3.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-5940888c.js";import"./CIMSymbol-8f55d4ab.js";import"./enumeration-925aa0f6.js";import"./Extent-22afa84a.js";import"./Ellipsoid-89682c5e.js";import"./fieldUtils-d430f46c.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-dd48afd7.js";import"./geometry-7d866d3f.js";import"./Polyline-82cb63bc.js";import"./typeUtils-1714017f.js";import"./Color-7b46c33a.js";import"./colorUtils-639f4d25.js";import"./mathUtils-ae09f98b.js";import"./vec3-8818fe1c.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-d4a4b602.js";import"./symbolLayerUtils3D-5cf2dcce.js";import"./aaBoundingBox-fb003858.js";import"./aaBoundingRect-2fb32e32.js";import"./Symbol3DAnchorPosition2D-e9d8a8f4.js";import"./Collection-74ae958a.js";import"./Evented-686173eb.js";import"./SimpleObservable-bd2c3ae8.js";import"./collectionUtils-423a192d.js";import"./Clonable-7fa7ad97.js";import"./Loadable-40ecd3b9.js";import"./Promise-755e47e5.js";import"./locale-fe7cc1d0.js";import"./PortalGroup-00fb77a4.js";import"./PortalUser-9579f611.js";import"./layerUtils-eef15b39.js";function Ct(t,r,o,m){return t.name?t.styleName&&t.styleName==="Esri2DPointSymbolsStyle"?R(t,r,m):G(t,r,m).then(a=>M(F(a),t.name,r,o,m)):Promise.reject(new N("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function M(t,r,o,m,a){var f;const y=t.data,l=o&&S(o.portal)?o.portal:w.getDefault(),c={portal:l,url:u(t.baseUrl),origin:"portal-item"},p=y.items.find(e=>e.name===r);if(!p){const e=`The symbol name '${r}' could not be found`;return Promise.reject(new N("symbolstyleutils:symbol-name-not-found",e,{symbolName:r}))}let n=g(H(p,m),c),s=((f=p.thumbnail)==null?void 0:f.href)??null;const b=p.thumbnail&&p.thumbnail.imageData;C()&&(n=$(n)??"",s=$(s));const O={portal:l,url:u(U(n)),origin:"portal-item"};return P(n,a).then(e=>{const x=m==="cimRef"?j(e.data):e.data,i=D(x,O);if(i&&v(i)){if(s){const E=g(s,c);i.thumbnail=new d({url:E})}else b&&(i.thumbnail=new d({url:`data:image/png;base64,${b}`}));t.styleUrl?i.styleOrigin=new h({portal:o.portal,styleUrl:t.styleUrl,name:r}):t.styleName&&(i.styleOrigin=new h({portal:o.portal,styleName:t.styleName,name:r}))}return i})}function R(t,r,o){const m=L.replace(/\{SymbolName\}/gi,t.name),a=S(r.portal)?r.portal:w.getDefault();return P(m,o).then(y=>{const l=j(y.data);return D(l,{portal:a,url:u(U(m)),origin:"portal-item"})})}export{M as fetchSymbolFromStyle,Ct as resolveWebStyleSymbol};
