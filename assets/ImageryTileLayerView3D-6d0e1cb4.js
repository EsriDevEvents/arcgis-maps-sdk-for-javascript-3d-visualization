import{e as p,y as s,a as z}from"./jsonMap-ffa742d3.js";import{a as w}from"./Error-5cdd6e0a.js";import{e as v,t as I,r as T}from"./typedArrayUtil-bf9f210a.js";import{j as L}from"./reactiveUtils-53e5756b.js";import"./ArrayPool-b51874dd.js";import{n as O}from"./LayerView3D-e2b7aff2.js";import{c as P}from"./TiledLayerView3D-f92aa007.js";import{au as _}from"./SceneView-7ac05f56.js";import{g as j}from"./Graphic-5dcfa25e.js";import{b as G}from"./OperationalLayer-db187f46.js";import{v as S,J as M}from"./rasterProjectionHelper-61d493f4.js";import{s as $}from"./popupUtils-55b97964.js";import{u as k}from"./LayerView-92e98881.js";import{i as A}from"./RefreshableLayerView-e8f476db.js";import{a as J}from"./drapedUtils-839f6fe4.js";import{l as V}from"./capabilities-caaa1278.js";import"./string-53224faa.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-5940888c.js";import"./preload-helper-41c905a7.js";import"./Clonable-7fa7ad97.js";import"./Cyclical-47bda305.js";import"./mathUtils-ae09f98b.js";import"./vec3-8818fe1c.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./Extent-22afa84a.js";import"./Ellipsoid-89682c5e.js";import"./geometry-7d866d3f.js";import"./Polyline-82cb63bc.js";import"./typeUtils-1714017f.js";import"./jsonUtils-36bf3d33.js";import"./Collection-74ae958a.js";import"./Evented-686173eb.js";import"./SimpleObservable-bd2c3ae8.js";import"./widget-01c21b51.js";import"./intl-87d72dbe.js";import"./number-036ac4ef.js";import"./locale-fe7cc1d0.js";import"./messages-1516d146.js";import"./request-09e7d9b2.js";import"./assets-94d592bf.js";import"./Promise-755e47e5.js";import"./uuid-73213768.js";import"./screenUtils-410d12c0.js";import"./workers-c8fc8d43.js";import"./Connection-3d9fb42e.js";import"./GraphicsLayer-cbd6e467.js";import"./collectionUtils-423a192d.js";import"./HandleOwner-6217a02e.js";import"./Layer-524734fa.js";import"./Identifiable-e4f9b04c.js";import"./Loadable-40ecd3b9.js";import"./BlendLayer-793ff14a.js";import"./colorUtils-639f4d25.js";import"./mat4f32-60a2394b.js";import"./mat4-f0dc8788.js";import"./ScaleRangeLayer-d1b04b80.js";import"./ElevationInfo-005ddd87.js";import"./fieldUtils-d430f46c.js";import"./arcadeOnDemand-dd48afd7.js";import"./lengthUtils-3c9047c4.js";import"./HeightModelInfo-73f516f9.js";import"./projection-4ac247db.js";import"./aaBoundingRect-2fb32e32.js";import"./zscale-baa108ea.js";import"./sphere-a48b65b1.js";import"./vec4f64-6d0e93be.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./quatf64-f8f1c132.js";import"./vec2f64-70cfd09e.js";import"./lineSegment-4eb8b6fa.js";import"./plane-01584357.js";import"./spatialReferenceEllipsoidUtils-88aa82c4.js";import"./scaleUtils-a3b834c2.js";import"./layerUtils-eef15b39.js";import"./AttachmentInfo-23249301.js";import"./AttachmentQuery-f1085685.js";import"./PopupTemplate-81dc9b83.js";import"./enumeration-925aa0f6.js";import"./ColorStop-29c89bbb.js";import"./Color-7b46c33a.js";import"./utils-6a5cc1bf.js";import"./symbols-5f42cb0e.js";import"./CIMSymbol-8f55d4ab.js";import"./opacityUtils-d4a4b602.js";import"./symbolLayerUtils3D-5cf2dcce.js";import"./aaBoundingBox-fb003858.js";import"./persistableUrlUtils-3635dccc.js";import"./Symbol3DAnchorPosition2D-e9d8a8f4.js";import"./Portal-8dfa7a94.js";import"./PortalGroup-00fb77a4.js";import"./PortalUser-9579f611.js";import"./asyncUtils-24bd37b2.js";import"./ItemCache-e927309e.js";import"./MemCache-b4d68123.js";import"./jsonUtils-9b4d797d.js";import"./UniqueValueRenderer-80c8e628.js";import"./diffUtils-1bae97a1.js";import"./colorRamps-18bbdf60.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-61985981.js";import"./compilerUtils-7bf6df9e.js";import"./jsonUtils-27937179.js";import"./styleUtils-689841ac.js";import"./DictionaryLoader-1c3435ac.js";import"./LRUCache-86d9ad15.js";import"./deprecate-ba25fc78.js";import"./heatmapUtils-8ee685fd.js";import"./Query-b0193ce7.js";import"./TimeExtent-64e16588.js";import"./Field-945b2973.js";import"./fieldType-24ac97df.js";import"./executeQueryJSON-044ac84b.js";import"./normalizeUtils-353ec0fc.js";import"./normalizeUtilsCommon-d8ea404e.js";import"./query-b4dff312.js";import"./pbfQueryUtils-481b10bc.js";import"./pbf-845dcafd.js";import"./OptimizedFeature-3e582950.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-f6e44ca7.js";import"./FeatureSet-b4fbf079.js";import"./featureConversionUtils-aead6959.js";import"./RelationshipQuery-765b2184.js";import"./TopFeaturesQuery-d2b31d08.js";import"./FeatureLayer-e767d294.js";import"./MultiOriginJSONSupport-06f8f24a.js";import"./serviceCapabilitiesUtils-22f436bd.js";import"./arcgisLayerUrl-1b8d6c52.js";import"./FeatureLayerBase-633118ca.js";import"./TimeReference-adaa7961.js";import"./datetime-eed49b9b.js";import"./editsZScale-9d0832b8.js";import"./APIKeyMixin-ef4ccb38.js";import"./ArcGISService-24587a68.js";import"./CustomParametersMixin-2798ec18.js";import"./EditBusLayer-b1010019.js";import"./FeatureReductionLayer-5ef01ce2.js";import"./labelingInfo-e65ecbf4.js";import"./labelUtils-b68da70f.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-045186a6.js";import"./PortalLayer-d69e402d.js";import"./PortalItem-4d7e1038.js";import"./portalItemUtils-0655aa33.js";import"./RefreshableLayer-12bc7ba2.js";import"./TemporalLayer-f231f22a.js";import"./FeatureTemplate-5a472038.js";import"./FeatureType-017f886c.js";import"./fieldProperties-7a0757a8.js";import"./FieldsIndex-113320d3.js";import"./versionUtils-9a1e7983.js";import"./styleUtils-5c617777.js";import"./popupUtils-b8625101.js";import"./callExpressionWithFeature-eb5719d8.js";import"./quantizationUtils-16db4e0b.js";import"./Scheduler-61737382.js";import"./ElevationSamplerData-3fc2a90f.js";import"./TileInfo-9973cd47.js";import"./Basemap-5a7c72ee.js";import"./loadAll-8ca49458.js";import"./writeUtils-b7104d82.js";import"./CollectionFlattener-80d223f1.js";import"./TablesMixin-8f62a14c.js";import"./ViewingMode-5d7d590b.js";import"./vec2-848c6cf0.js";import"./PhysicallyBasedRendering.glsl-edd81ba9.js";import"./View.glsl-879c1eaf.js";import"./ShaderBuilder-be7ca791.js";import"./FloatPassUniform-0426669b.js";import"./Float4PassUniform-9354414b.js";import"./RgbaFloatEncoding.glsl-67199794.js";import"./Texture2DPassUniform-268e8d2d.js";import"./vec3f32-01c06d8d.js";import"./VertexAttribute-15d1866a.js";import"./Texture2DDrawUniform-e4341b84.js";import"./basicInterfaces-7449a8bf.js";import"./PiUtils.glsl-49462ceb.js";import"./ReadLinearDepth.glsl-0e6f5c47.js";import"./WaterSurface.glsl-e13d44e2.js";import"./ForwardLinearDepth.glsl-52bf5bdc.js";import"./Matrix3PassUniform-df6e2166.js";import"./Slice.glsl-cd30f0ea.js";import"./Transform.glsl-052069d0.js";import"./OutputHighlight.glsl-ca02d1ee.js";import"./MultipassTerrainTest.glsl-8b279fcd.js";import"./NormalUtils.glsl-84d184a7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-c3841b0a.js";import"./EvaluateSceneLighting.glsl-14c608ff.js";import"./VisualVariablePassParameters-f892560d.js";import"./enums-fc527c7c.js";import"./VertexElementDescriptor-2925c6af.js";import"./Texture-d2fa6cd8.js";import"./context-util-34d303b7.js";import"./Util-513876a8.js";import"./SSAOBlur.glsl-c56632c0.js";import"./ScreenSpacePass.glsl-44cc0c5e.js";import"./SSAO.glsl-2c6533cd.js";import"./ShaderTechniqueConfiguration-0fa0f78c.js";import"./mat3-4fd89d48.js";import"./HUD.glsl-73b068b4.js";import"./VerticalOffset.glsl-109e8746.js";import"./Octree-813f29c9.js";import"./objectResourceUtils-3685cb27.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-b402c7a7.js";import"./vec33-ca555933.js";import"./DefaultMaterial_COLOR_GAMMA-8ec4380b.js";import"./types-e1c0a5bf.js";import"./Version-621cc6b7.js";import"./quat-77a0169c.js";import"./resourceUtils-527631ac.js";import"./Indices-f9b34f39.js";import"./DefaultMaterial.glsl-58ca0075.js";import"./MixExternalColor.glsl-f5c601ed.js";import"./symbolColorUtils-1c63720c.js";import"./ObjectAndLayerIdColor.glsl-66083f64.js";import"./OutputDepth.glsl-17bf0574.js";import"./VisualVariables.glsl-bb97d5ba.js";import"./DiscardOrAdjustAlphaBlend.glsl-27f02ebd.js";import"./VertexColor.glsl-2f905a78.js";import"./Normals.glsl-6a1bc6fb.js";import"./vec2f32-eaf29605.js";import"./Texture-ae652f15.js";import"./TextureOnly.glsl-469cc321.js";import"./Attribute-f72d3f37.js";import"./InterleavedLayout-07cc6753.js";import"./DefaultTechniqueConfiguration-b54ae0b1.js";import"./RealisticTree.glsl-29f7cbd7.js";import"./edgeProcessing-ac701714.js";import"./deduplicate-a70aec6f.js";import"./MeshComponent-777de3ff.js";import"./earcut-61f7b102.js";import"./projection-03824933.js";import"./HUDMaterial.glsl-82200888.js";import"./sdfPrimitives-3ceeab79.js";import"./floatRGBA-1f66d0a4.js";import"./dehydratedFeatures-efdbcd90.js";import"./labelFormatUtils-f90ee62f.js";import"./orientedBoundingBox-6188c4d9.js";import"./quatf32-51a323b8.js";import"./LineCallout.glsl-76cd336e.js";import"./SnappingCandidate-970faec6.js";import"./MarkerSizing.glsl-950a18f6.js";import"./RibbonLine.glsl-8fe4662b.js";import"./LineStipple.glsl-4eef2aea.js";import"./LineMarker.glsl-2c017de2.js";import"./NativeLine.glsl-9893bc56.js";import"./Path.glsl-2eb74a31.js";import"./ColorMaterial.glsl-1d45c81e.js";import"./Pattern.glsl-698f2083.js";import"./LercDecoder-f1486af7.js";import"./enums-fb086c25.js";import"./config-f7904f35.js";import"./TileKey-4d1284e4.js";import"./workerHelper-2d7b0d57.js";const W=i=>{let t=class extends i{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return this.projectFullExtent(this.view.spatialReference)}get hasTilingEffects(){return this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment}get datumTransformation(){return S(v(this.layer.fullExtent),this.view.spatialReference,!0)}supportsSpatialReference(r){return!!this.projectFullExtent(r)}projectFullExtent(r){const o=v(this.layer.fullExtent),e=S(o,r,!1);return M(o,r,e)}async fetchPopupFeatures(r,o){const{layer:e}=this;if(!r)throw new w("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:e});const{popupEnabled:u}=e,y=$(e,o);if(!u||I(y))throw new w("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:u,popupTemplate:y});const n=[],{value:a,magdirValue:m}=await e.identify(r,{timeExtent:this.timeExtent});let g="";if(a&&a.length){g=e.type==="imagery-tile"&&e.hasStandardTime()&&a[0]!=null?a.map(b=>e.getStandardTimeValue(b)).join(", "):a.join(", ");const d={ObjectId:0};d["Raster.ServicePixelValue"]=g;const x=e.rasterInfo.attributeTable;if(T(x)){const{fields:b,features:F}=x,E=b.find(({name:l})=>l.toLowerCase()==="value"),f=E?F.find(l=>String(l.attributes[E.name])===g):null;if(f)for(const l in f.attributes)f.attributes.hasOwnProperty(l)&&(d[this._rasterFieldPrefix+l]=f.attributes[l])}const R=e.rasterInfo.dataType;R!=="vector-magdir"&&R!=="vector-uv"||(d["Raster.Magnitude"]=m==null?void 0:m[0],d["Raster.Direction"]=m==null?void 0:m[1]);const c=new j(this.fullExtent.clone(),null,d);c.layer=e,c.sourceLayer=c.layer,n.push(c)}return n}};return p([s()],t.prototype,"layer",void 0),p([s(G)],t.prototype,"timeExtent",void 0),p([s()],t.prototype,"view",void 0),p([s()],t.prototype,"fullExtent",null),p([s()],t.prototype,"tileInfo",void 0),p([s({readOnly:!0})],t.prototype,"hasTilingEffects",null),t=p([z("esri.views.layers.ImageryTileLayerView")],t),t};let h=class extends W(A(P(O(k)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this.isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new w("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const i=L(()=>{var t,r;return(r=(t=this.view)==null?void 0:t.basemapTerrain)==null?void 0:r.tilingSchemeLocked}).then(()=>{const t=this.view.basemapTerrain.tilingScheme,r=this.layer.tileInfo,o=["png","png24","png32","jpg","mixed"].includes(r.format)&&t.compatibleWith(r);this.isAlignedMapTile=o;const e=o?r:t.toTileInfo();this.tileInfo=e,this.updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction],()=>this.refresh())});this.addResolvingPromise(i)}destroy(){this.layer.decreaseRasterJobHandlerUsage(),this.view=null}get _blankTile(){const i=document.createElement("canvas"),t=i.getContext("2d"),[r,o]=this.tileInfo.size;return i.width=r,i.height=o,t.clearRect(0,0,r,o),t.getImageData(0,0,r,o)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){const i=this.tileInfo.lods,t=this.layer.tileInfo.lods,r=i[0].scale,o=t[t.length-1].scale;return this.levelRangeFromScaleRange(r,o)}_getfullExtent(){return this.projectFullExtent(this.view.basemapTerrain&&T(this.view.basemapTerrain.spatialReference)?this.view.basemapTerrain.spatialReference:this.view.spatialReference)}async fetchTile(i,t,r,o){const e=this.tileInfo,u=this._canSymbolizeInWebGL(),y={tileInfo:e,requestRawData:u,signal:v(o.signal),requestAsImageElement:this.isAlignedMapTile},n=await this.layer.fetchTile(i,t,r,y);if(n instanceof HTMLImageElement)return n;let a=n&&n.pixelBlock;if(I(a))return this._blankTile;if(!u&&(a=await this.layer.applyRenderer(n),I(a)))return this._blankTile;const m=new _([i,t,r],a,e.size[0],e.size[1]);return u?(m.symbolizerRenderer=this.layer.symbolizer.rendererJSON,m.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(i)),m.transformGrid=n.transformGrid):m.isRendereredSource=!0,m.interpolation=this.layer.interpolation,m.bandIds=this.layer.bandIds,m}_getSymbolizerOptions(i){const t=this.tileInfo.lodAt(i).resolution;return{pixelBlock:null,isGCS:this.view.basemapTerrain&&T(this.view.basemapTerrain.spatialReference)?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(i){this._canSymbolizeInWebGL()&&JSON.stringify(i.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(i.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(i.lij[0])))}createFetchPopupFeaturesQueryGeometry(i,t){return J(i,t,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){return V("3d").supportsTextureFloat&&this.layer.symbolizer.canRenderInWebGL}};p([s({readOnly:!0})],h.prototype,"_blankTile",null),p([s({readOnly:!0})],h.prototype,"imageFormatIsOpaque",null),p([s({readOnly:!0})],h.prototype,"hasMixedImageFormats",null),p([s({readOnly:!0})],h.prototype,"dataLevelRange",null),h=p([z("esri.views.3d.layers.ImageryTileLayerView3D")],h);const jo=h;export{jo as default};
