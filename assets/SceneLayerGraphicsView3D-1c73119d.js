import{_ as q}from"./preload-helper-41c905a7.js";import{e as c,y as u,a as H}from"./jsonMap-ffa742d3.js";import{g as F}from"./Graphic-5dcfa25e.js";import{t as f,r as _,a as b,e as U,M as Q}from"./typedArrayUtil-bf9f210a.js";import{s as E}from"./Error-5cdd6e0a.js";import{h as C,l as z}from"./reactiveUtils-53e5756b.js";import{n as T}from"./ArrayPool-b51874dd.js";import{o as k,n as B}from"./vec3-8818fe1c.js";import{x as G,j as W}from"./projection-4ac247db.js";import{a0 as Z}from"./Extent-22afa84a.js";import{o as J}from"./zscale-baa108ea.js";import{_ as O,C as K,b as Y,a9 as X,V as ee}from"./SceneView-7ac05f56.js";import{M as te,N as re}from"./dehydratedFeatures-efdbcd90.js";import{A as S,t as ie}from"./I3SOverrides-754800bf.js";import{y as oe}from"./FeatureReductionLayer-5ef01ce2.js";import{x as A}from"./Query-b0193ce7.js";import{h as se}from"./LercDecoder-f1486af7.js";import{n as ae}from"./LayerView3D-e2b7aff2.js";import{F as ne,p as de}from"./FeatureLikeLayerView3D-e43d70a7.js";import{c as pe,i as le,u as he,b as me,E as ce}from"./SceneLayerView-fb308531.js";import{n as ue}from"./Evented-686173eb.js";import{g as ge,w as _e,J as fe,a as ye,m as L}from"./I3SUtil-4be1431c.js";import{t as be}from"./DefinitionExpressionSceneLayerView-3c2ce549.js";import{c as ve}from"./PopupSceneLayerView-0083d510.js";import{Q as xe}from"./orientedBoundingBox-6188c4d9.js";import{s as Ee}from"./Attribute-f72d3f37.js";import{n as M}from"./MeshComponent-777de3ff.js";import{R as Ie}from"./Scheduler-61737382.js";import"./string-53224faa.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-5940888c.js";import"./geometry-7d866d3f.js";import"./Polyline-82cb63bc.js";import"./typeUtils-1714017f.js";import"./PopupTemplate-81dc9b83.js";import"./Clonable-7fa7ad97.js";import"./Collection-74ae958a.js";import"./SimpleObservable-bd2c3ae8.js";import"./fieldUtils-d430f46c.js";import"./arcadeOnDemand-dd48afd7.js";import"./enumeration-925aa0f6.js";import"./number-036ac4ef.js";import"./locale-fe7cc1d0.js";import"./Identifiable-e4f9b04c.js";import"./symbols-5f42cb0e.js";import"./CIMSymbol-8f55d4ab.js";import"./Color-7b46c33a.js";import"./colorUtils-639f4d25.js";import"./mathUtils-ae09f98b.js";import"./vec4-c7a19f0d.js";import"./common-d0b63c2d.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-d4a4b602.js";import"./symbolLayerUtils3D-5cf2dcce.js";import"./aaBoundingBox-fb003858.js";import"./aaBoundingRect-2fb32e32.js";import"./request-09e7d9b2.js";import"./persistableUrlUtils-3635dccc.js";import"./Symbol3DAnchorPosition2D-e9d8a8f4.js";import"./collectionUtils-423a192d.js";import"./Portal-8dfa7a94.js";import"./Loadable-40ecd3b9.js";import"./Promise-755e47e5.js";import"./PortalGroup-00fb77a4.js";import"./PortalUser-9579f611.js";import"./Ellipsoid-89682c5e.js";import"./jsonUtils-36bf3d33.js";import"./mat4-f0dc8788.js";import"./assets-94d592bf.js";import"./Cyclical-47bda305.js";import"./widget-01c21b51.js";import"./intl-87d72dbe.js";import"./messages-1516d146.js";import"./uuid-73213768.js";import"./workers-c8fc8d43.js";import"./Connection-3d9fb42e.js";import"./GraphicsLayer-cbd6e467.js";import"./HandleOwner-6217a02e.js";import"./Layer-524734fa.js";import"./BlendLayer-793ff14a.js";import"./mat4f32-60a2394b.js";import"./ScaleRangeLayer-d1b04b80.js";import"./ElevationInfo-005ddd87.js";import"./lengthUtils-3c9047c4.js";import"./HeightModelInfo-73f516f9.js";import"./sphere-a48b65b1.js";import"./vec4f64-6d0e93be.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./quatf64-f8f1c132.js";import"./vec2f64-70cfd09e.js";import"./lineSegment-4eb8b6fa.js";import"./plane-01584357.js";import"./spatialReferenceEllipsoidUtils-88aa82c4.js";import"./scaleUtils-a3b834c2.js";import"./layerUtils-eef15b39.js";import"./AttachmentInfo-23249301.js";import"./AttachmentQuery-f1085685.js";import"./ColorStop-29c89bbb.js";import"./utils-6a5cc1bf.js";import"./asyncUtils-24bd37b2.js";import"./ItemCache-e927309e.js";import"./MemCache-b4d68123.js";import"./jsonUtils-9b4d797d.js";import"./UniqueValueRenderer-80c8e628.js";import"./diffUtils-1bae97a1.js";import"./colorRamps-18bbdf60.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-61985981.js";import"./compilerUtils-7bf6df9e.js";import"./jsonUtils-27937179.js";import"./styleUtils-689841ac.js";import"./DictionaryLoader-1c3435ac.js";import"./LRUCache-86d9ad15.js";import"./deprecate-ba25fc78.js";import"./heatmapUtils-8ee685fd.js";import"./executeQueryJSON-044ac84b.js";import"./normalizeUtils-353ec0fc.js";import"./normalizeUtilsCommon-d8ea404e.js";import"./query-b4dff312.js";import"./pbfQueryUtils-481b10bc.js";import"./pbf-845dcafd.js";import"./OptimizedFeature-3e582950.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-f6e44ca7.js";import"./FeatureSet-b4fbf079.js";import"./Field-945b2973.js";import"./fieldType-24ac97df.js";import"./featureConversionUtils-aead6959.js";import"./RelationshipQuery-765b2184.js";import"./TimeExtent-64e16588.js";import"./TopFeaturesQuery-d2b31d08.js";import"./FeatureLayer-e767d294.js";import"./MultiOriginJSONSupport-06f8f24a.js";import"./serviceCapabilitiesUtils-22f436bd.js";import"./arcgisLayerUrl-1b8d6c52.js";import"./FeatureLayerBase-633118ca.js";import"./OperationalLayer-db187f46.js";import"./TimeReference-adaa7961.js";import"./datetime-eed49b9b.js";import"./editsZScale-9d0832b8.js";import"./APIKeyMixin-ef4ccb38.js";import"./ArcGISService-24587a68.js";import"./CustomParametersMixin-2798ec18.js";import"./EditBusLayer-b1010019.js";import"./OrderedLayer-045186a6.js";import"./PortalLayer-d69e402d.js";import"./PortalItem-4d7e1038.js";import"./portalItemUtils-0655aa33.js";import"./RefreshableLayer-12bc7ba2.js";import"./TemporalLayer-f231f22a.js";import"./FeatureTemplate-5a472038.js";import"./FeatureType-017f886c.js";import"./fieldProperties-7a0757a8.js";import"./FieldsIndex-113320d3.js";import"./labelingInfo-e65ecbf4.js";import"./labelUtils-b68da70f.js";import"./defaultsJSON-59981e75.js";import"./versionUtils-9a1e7983.js";import"./styleUtils-5c617777.js";import"./popupUtils-b8625101.js";import"./callExpressionWithFeature-eb5719d8.js";import"./quantizationUtils-16db4e0b.js";import"./ElevationSamplerData-3fc2a90f.js";import"./TileInfo-9973cd47.js";import"./Basemap-5a7c72ee.js";import"./loadAll-8ca49458.js";import"./writeUtils-b7104d82.js";import"./CollectionFlattener-80d223f1.js";import"./TablesMixin-8f62a14c.js";import"./ViewingMode-5d7d590b.js";import"./vec2-848c6cf0.js";import"./PhysicallyBasedRendering.glsl-edd81ba9.js";import"./View.glsl-879c1eaf.js";import"./ShaderBuilder-be7ca791.js";import"./FloatPassUniform-0426669b.js";import"./Float4PassUniform-9354414b.js";import"./RgbaFloatEncoding.glsl-67199794.js";import"./Texture2DPassUniform-268e8d2d.js";import"./vec3f32-01c06d8d.js";import"./VertexAttribute-15d1866a.js";import"./Texture2DDrawUniform-e4341b84.js";import"./basicInterfaces-7449a8bf.js";import"./PiUtils.glsl-49462ceb.js";import"./ReadLinearDepth.glsl-0e6f5c47.js";import"./WaterSurface.glsl-e13d44e2.js";import"./ForwardLinearDepth.glsl-52bf5bdc.js";import"./Matrix3PassUniform-df6e2166.js";import"./Slice.glsl-cd30f0ea.js";import"./Transform.glsl-052069d0.js";import"./OutputHighlight.glsl-ca02d1ee.js";import"./MultipassTerrainTest.glsl-8b279fcd.js";import"./NormalUtils.glsl-84d184a7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-c3841b0a.js";import"./EvaluateSceneLighting.glsl-14c608ff.js";import"./VisualVariablePassParameters-f892560d.js";import"./enums-fc527c7c.js";import"./VertexElementDescriptor-2925c6af.js";import"./Texture-d2fa6cd8.js";import"./context-util-34d303b7.js";import"./Util-513876a8.js";import"./SSAOBlur.glsl-c56632c0.js";import"./ScreenSpacePass.glsl-44cc0c5e.js";import"./SSAO.glsl-2c6533cd.js";import"./ShaderTechniqueConfiguration-0fa0f78c.js";import"./mat3-4fd89d48.js";import"./HUD.glsl-73b068b4.js";import"./VerticalOffset.glsl-109e8746.js";import"./Octree-813f29c9.js";import"./objectResourceUtils-3685cb27.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-b402c7a7.js";import"./vec33-ca555933.js";import"./DefaultMaterial_COLOR_GAMMA-8ec4380b.js";import"./types-e1c0a5bf.js";import"./Version-621cc6b7.js";import"./quat-77a0169c.js";import"./resourceUtils-527631ac.js";import"./Indices-f9b34f39.js";import"./DefaultMaterial.glsl-58ca0075.js";import"./MixExternalColor.glsl-f5c601ed.js";import"./symbolColorUtils-1c63720c.js";import"./ObjectAndLayerIdColor.glsl-66083f64.js";import"./OutputDepth.glsl-17bf0574.js";import"./VisualVariables.glsl-bb97d5ba.js";import"./DiscardOrAdjustAlphaBlend.glsl-27f02ebd.js";import"./VertexColor.glsl-2f905a78.js";import"./Normals.glsl-6a1bc6fb.js";import"./vec2f32-eaf29605.js";import"./Texture-ae652f15.js";import"./TextureOnly.glsl-469cc321.js";import"./InterleavedLayout-07cc6753.js";import"./DefaultTechniqueConfiguration-b54ae0b1.js";import"./RealisticTree.glsl-29f7cbd7.js";import"./edgeProcessing-ac701714.js";import"./deduplicate-a70aec6f.js";import"./projection-03824933.js";import"./HUDMaterial.glsl-82200888.js";import"./sdfPrimitives-3ceeab79.js";import"./floatRGBA-1f66d0a4.js";import"./labelFormatUtils-f90ee62f.js";import"./LineCallout.glsl-76cd336e.js";import"./earcut-61f7b102.js";import"./SnappingCandidate-970faec6.js";import"./MarkerSizing.glsl-950a18f6.js";import"./RibbonLine.glsl-8fe4662b.js";import"./LineStipple.glsl-4eef2aea.js";import"./LineMarker.glsl-2c017de2.js";import"./NativeLine.glsl-9893bc56.js";import"./Path.glsl-2eb74a31.js";import"./ColorMaterial.glsl-1d45c81e.js";import"./Pattern.glsl-698f2083.js";import"./enums-fb086c25.js";import"./config-f7904f35.js";import"./TileKey-4d1284e4.js";import"./workerHelper-2d7b0d57.js";import"./capabilities-caaa1278.js";import"./I3SNode-3d136092.js";import"./I3SBinaryReader-1333d96d.js";import"./RenderTexture-b7e204b5.js";import"./FeatureLayerView3D-c8f15273.js";import"./FeatureLayerViewBase3D-c2b95af2.js";import"./EventedSet-acb3b163.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-55b97964.js";import"./LayerView-92e98881.js";import"./RefreshableLayerView-e8f476db.js";import"./quatf32-51a323b8.js";import"./dehydratedFeatureComparison-e523fe14.js";import"./queryForSymbologySnapping-0800c0e3.js";import"./elevationInfoUtils-d3b9d588.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-93b8548c.js";import"./optimizedFeatureQueryEngineAdapter-9ce8e144.js";import"./centroid-0766e68a.js";import"./PooledRBush-2aadabe0.js";import"./quickselect-56c5966e.js";import"./QueryEngine-b5607f4f.js";import"./QueryEngineResult-0c6179e0.js";import"./WhereClause-0699a2ca.js";import"./executionError-fb3f283a.js";import"./utils-95e81b90.js";import"./generateRendererUtils-e34cc2cf.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./FeatureStore-4cc4d41d.js";import"./BoundsStore-d90f19c6.js";import"./Heatmap.glsl-934f4ed3.js";import"./HeatmapDensity.glsl-6ae51187.js";import"./projectExtentUtils-40135480.js";class P extends se{constructor(t){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:i=>[i.geometryBuffer]},t,{hasInitialize:!0})}}class we extends ue{constructor(t,i){super(),this._updateAndCompare=t,this._notifyUpdated=i,this._nodes=new Map,this._graphics=new Map,this._duplicates=new Map}clear(){if(this._graphics.size>0){const t=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:t})}this._nodes.clear()}get length(){return this._graphics.size}get(t){return this._graphics.get(t)}getNode(t){return this._nodes.get(t)}hasNode(t){return this._nodes.has(t)}nodes(){return this._nodes.values()}addNode(t,i){this._nodes.set(t,i);const r=i.graphics;if(r.length===0)return;const o=new Set;for(let a=0;a<r.length;a++){const n=r[a],d=n.objectId,l=this._graphics.get(d);if(l){o.add(d),n!==l&&(r[a]=l);const p=this._duplicates.get(d);p?p.push(t):this._duplicates.set(d,[l.nodeIndex,t])}else n.nodeIndex=t,this._graphics.set(d,n)}o.size&&this._updateForeignGraphics(i);const s=o.size>0?r.filter(a=>!o.has(a.objectId)):r;s.length>0&&this.emit("change",{added:s,removed:[]})}removeNode(t){const i=this._nodes.get(t);if(!i)return void console.error("Removing unknown node");this._nodes.delete(t);const r=new Set,o=[];for(const s of i.graphics){const a=s.objectId,n=this._graphics.get(a);if(!n)continue;const d=this._duplicates.get(a);if(d){const l=d.indexOf(t);if(l===-1){console.error("error: removing graphic from node that should not reference it.");continue}if(d.splice(l,1),n.nodeIndex===t){let p=this.getNode(d[0]);for(let m=1;m<d.length;m++){const g=this.getNode(d[m]);(f(p)||_(g)&&g.node.level>p.node.level)&&(p=g)}_(p)&&r.add(p)}d.length===1&&this._duplicates.delete(a)}else this._graphics.delete(a),o.push(s)}o.length>0&&this.emit("change",{added:[],removed:o}),r.forEach(s=>this._updateForeignGraphics(s))}_updateForeignGraphics(t){const i=[],r=t.node.index,o=t.node.level;let s=0;for(;s<t.graphics.length;){const a=t.graphics[s].nodeIndex;if(a===r){s++;continue}let n=1;for(;s+n<t.graphics.length&&t.graphics[s+n].nodeIndex===a;)n++;const d=this.getNode(a);if(_(d)&&d.node.level>o)s+=n;else{for(let l=s;l<s+n;l++){const p=t.graphics[l];p.nodeIndex=r,this._updateAndCompare(p,t,l)&&i.push(p)}s+=n}}this._notifyUpdated(i)}toArray(){return Array.from(this._graphics.values())}find(t){let i;return T(this._graphics,r=>!!t(r)&&(i=r,!0)),i}forEach(t){this._graphics.forEach(i=>t(i))}forEachNode(t){this._nodes.forEach((i,r)=>t(i,r))}get nodeCount(){return this._nodes.size}_checkInvariants(){const t=new Map;this._nodes.forEach((r,o)=>{o!==r.node.index&&console.error("Mismatched node index"),r.graphics.forEach(s=>{t.set(s.objectId,1+(t.get(s.objectId)??0));const a=this._duplicates.get(s.objectId);a&&!a.includes(o)&&console.error("Node not listed in duplicate list"),a||s.nodeIndex===o||console.error("Unique graphic does not reference owning node index")})}),this._graphics.size!==t.size&&console.error("Mismatch between actual and expected number of graphics");let i=0;t.forEach((r,o)=>{i+=r>1?1:0;const s=this._graphics.get(o);if(!s)return void console.error("Missing graphic entry");const a=this._nodes.get(s.nodeIndex);if(!a)return void console.error("Graphic references unkown node");const n=this._duplicates.get(o);n?(n.length!==r&&console.error("Wrong number of entries in duplicate list"),n.forEach(d=>{const l=this._nodes.get(d);l?l.node.level>a.node.level&&console.error("Duplicated graphic does not reference highest level node"):console.error("Unknown node in duplicate list")})):r>1&&console.error("Missing duplicates entry")}),this._duplicates.size!==i&&console.error("Mismatch between expected and actual number of duplicate entries")}}const R=me();let h=class extends be(ve(ae(ce))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this.loadedGraphics=new we((e,t,i)=>Ce(e,t,i),e=>this.processor.graphicsCore.recreateGraphics(e)),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(e,t){return e.url===this.layer.url&&this._i3sOverrides.isEmpty?e.load(t).then(()=>{var r;ge(this.layer,e,this._i3sOverrides),this.layer=e,this._i3sOverrides.destroy();const i=(r=this.view.resourceController)==null?void 0:r.memoryController;this._i3sOverrides=new S({view:this.view,layer:e,memoryController:i}),b(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()}):null}initialize(){var t,i;this.addResolvingPromise(this.layer.indexInfo);const e=(t=this.view.resourceController)==null?void 0:t.memoryController;this._i3sOverrides=new S({view:this.view,layer:this.layer,memoryController:e}),_e(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new pe({layerView:this}),this.updatingHandles.add(()=>this.layer.rangeInfos,r=>this._rangeInfosChanged(r),C),this.updatingHandles.add(()=>this.layer.renderer,(r,o)=>this._rendererChange(r,o)),this.updatingHandles.add(()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted],()=>this._filterChange()),this.handles.add(z(()=>O.I3S_TREE_SHOW_TILES,r=>{if(r&&!this._treeDebugger){const o=this._controller.crsIndex;q(()=>import("./I3STreeDebugger-19380626.js"),["./I3STreeDebugger-19380626.js","./jsonMap-ffa742d3.js","./typedArrayUtil-bf9f210a.js","./string-53224faa.js","./Error-5cdd6e0a.js","./ArrayPool-b51874dd.js","./nextTick-3ee5a785.js","./promiseUtils-5940888c.js","./geometry-7d866d3f.js","./Extent-22afa84a.js","./Ellipsoid-89682c5e.js","./Polyline-82cb63bc.js","./typeUtils-1714017f.js","./mat4-f0dc8788.js","./vec3-8818fe1c.js","./common-d0b63c2d.js","./mat4f64-abdda1bb.js","./projection-4ac247db.js","./preload-helper-41c905a7.js","./mathUtils-ae09f98b.js","./vec4-c7a19f0d.js","./SimpleObservable-bd2c3ae8.js","./assets-94d592bf.js","./request-09e7d9b2.js","./aaBoundingRect-2fb32e32.js","./zscale-baa108ea.js","./TileTreeDebugger-66028ce4.js","./Color-7b46c33a.js","./colorUtils-639f4d25.js","./Graphic-5dcfa25e.js","./PopupTemplate-81dc9b83.js","./Clonable-7fa7ad97.js","./Collection-74ae958a.js","./Evented-686173eb.js","./fieldUtils-d430f46c.js","./arcadeOnDemand-dd48afd7.js","./enumeration-925aa0f6.js","./number-036ac4ef.js","./locale-fe7cc1d0.js","./Identifiable-e4f9b04c.js","./symbols-5f42cb0e.js","./CIMSymbol-8f55d4ab.js","./screenUtils-410d12c0.js","./opacityUtils-d4a4b602.js","./symbolLayerUtils3D-5cf2dcce.js","./aaBoundingBox-fb003858.js","./persistableUrlUtils-3635dccc.js","./Symbol3DAnchorPosition2D-e9d8a8f4.js","./collectionUtils-423a192d.js","./Portal-8dfa7a94.js","./Loadable-40ecd3b9.js","./Promise-755e47e5.js","./PortalGroup-00fb77a4.js","./PortalUser-9579f611.js","./jsonUtils-36bf3d33.js"],import.meta.url).then(({I3STreeDebugger:s})=>{!this._treeDebugger&&O.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new s({lv:this,view:this.view,nodeSR:o}))})}else r||!this._treeDebugger||O.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)},C)),this._set("processor",new ne({owner:this,preferredUpdatePolicy:K.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:r=>this._updateClippingExtent(r)})),(i=this.processor.elevationAlignment)==null||i.events.on("invalidate-elevation",r=>this._controller.updateElevationChanged(r.extent,r.spatialReference)),this.supportsHeightUnitConversion&&(this._verticalScale=J("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache(this.uid),this._controller=new ie({layerView:this,scaleVisibilityEnabled:!1}),fe(this.layer.geometryDefinitions)&&(this._worker=new P(r=>this.view.resourceController.immediate.schedule(r))),this.handles.add(this.layer.on("apply-edits",r=>this.updatingHandles.addPromise(r.result))),this.handles.add(this.layer.on("edits",r=>this._handleEdits(r))),this.when(()=>{this._setupQueryEngine(),this.updatingHandles.add(()=>this.maximumNumberOfFeatures,r=>this._controller.featureTarget=r,C),this.updatingHandles.add(()=>this.suspended,r=>{r&&this._removeAllNodeData()})})}destroy(){this._treeDebugger=b(this._treeDebugger),this._i3sOverrides=b(this._i3sOverrides),this._set("processor",b(this.processor)),this._controller=b(this._controller),this._queryEngine=b(this._queryEngine),this._worker=b(this._worker),this._memCache=b(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=b(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){var e;return((e=this._controller)==null?void 0:e.updatingProgress)??1}get requiredFields(){var e;return((e=this._fieldsHelper)==null?void 0:e.requiredFields)??[]}get maximumNumberOfFeatures(){var t,i;const e=(i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.displayFeatureLimit;return(e==null?void 0:e.maximumNumberOfFeatures)??0}set maximumNumberOfFeatures(e){e!=null?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){var e;return!this.suspended&&!!((e=this._controller)!=null&&e.useMaximumNumberOfFeatures)&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort((t,i)=>t-i):null}get lodFactor(){return this.layer.semantic==="Labels"?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}async whenGraphicAttributes(e,t){return ye(this.layer,e,this._getObjectIdField(),t,()=>[...this.loadedGraphics.nodes()])}getHit(e){if(!this.loadedGraphics)return null;const t=Y(this.loadedGraphics.find(r=>r.uid===e),this.layer),i=this._getObjectIdField();return t&&t.attributes&&t.attributes[i]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){var e,t,i;return!!((e=this._controller)!=null&&e.updating||(t=this.processor)!=null&&t.updating||(i=this._fieldsHelper)!=null&&i.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return le(this._attributeEditingContext,e)}async _decompressBinaryPointData(e,t){const i={geometryBuffer:e.geometryBuffer};f(this._worker)&&(this._worker=new P(o=>this.view.resourceController.immediate.schedule(o)));const r=await this._worker.invoke(i,t);if(f(r))throw new Error("Failed to decompress Draco point data");return{positionData:r.positions,featureIds:r.featureIds}}async addNode(e,t,i){if(!D(t)&&!Ne(t))throw new Error;if(this.loadedGraphics.hasNode(e.index))return void E.getLogger(this.declaredClass).error("I3S node "+e.id+" already added");const r=_(this.layer.fullExtent)?Oe(this.layer.fullExtent.clone(),.5):null,o=[],{featureIds:s,pointPositions:a}=D(t)?await this._extractBinaryPointPositions(e,t,i):this._extractLegacyPointPositions(t);this._validatePositions(e,s,a,r,o);const n=this._controller.crsVertex,d=this.view.spatialReference;G(a,n,0,a,d,0,s.length);const l=D(t)?e.level:0,p={graphics:this._createGraphics(s,a,e.index,l),featureIds:s,attributeInfo:t.attributeDataInfo,node:e};if(await this._i3sOverrides.apply(p.featureIds,t.attributeDataInfo,i),e.numFeatures=p.graphics.length,this._updateNodeMemory(e),$(p),o.length>0&&(this._computeObb(e,o,n),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(p);if(_(this._verticalScale))for(const g of p.graphics)this._verticalScale(g.geometry);const m=this.view._stage.renderView.objectAndLayerIdRenderHelper;if(_(m))for(let g=0;g<p.featureIds.length;g++){const v=p.featureIds[g];m.setUidToObjectAndLayerId(v,p.graphics[g].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled,p.node.resources.attributes,g)}this.loadedGraphics.addNode(e.index,p),this._controller.updateLoadStatus(e.index,!0),this._filterNode(p),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,i){const r=this._controller.crsIndex,o=r.isGeographic?this.view.renderSpatialReference:r;G(t,i,0,t,o,0,t.length/3),e.serviceObb=xe(new Ee(t,3)),r.isGeographic&&W(e.serviceObb.center,o,e.serviceObb.center,r)}isNodeLoaded(e){return this.loadedGraphics.hasNode(e)}isNodeReloading(){return!1}updateNodeState(){}async _extractBinaryPointPositions(e,t,i){const r=await this._decompressBinaryPointData(t,i),o=r.positionData,s=3,a=o.length/s,n=M(3*a),d=_(e.serviceObb)?e.serviceObb.center:[0,0,0],l=Math.abs(d[2])*2**-20;for(let p=0;p<a;p++){const m=p*s;n[m+0]=o[m+0]+d[0],n[m+1]=o[m+1]+d[1],n[m+2]=o[m+2]+d[2],Math.abs(n[m+2])<l&&(n[m+2]=0)}return{featureIds:r.featureIds?Array.from(r.featureIds):[],pointPositions:n}}_extractLegacyPointPositions(e){var o,s;const t=e.pointData.length,i=M(3*t),r=new Array;for(let a=0;a<t;a++){const n=e.pointData[a],d=n.featureDataPosition,l=d.length,p=((o=n.geometries)==null?void 0:o[0])??De[l],m=n.featureIds[0];if(p.type!=="Embedded"||p.params.type!=="points"||l<2||l>3)continue;const g=((s=p.params.vertexAttributes)==null?void 0:s.position)??[0,0,0],v=3*r.length;i[v+0]=d[0]+g[0],i[v+1]=d[1]+g[1],i[v+2]=l===3?d[2]+g[2]:NaN,r.push(m)}return{featureIds:r,pointPositions:i}}_validatePositions(e,t,i,r,o){if(f(r)&&e.serviceObb)return;const s=t.length,a=3;for(let n=0;n<s;n++){const d=n*a;k(I,i[d],i[d+1],i[d+2]),_(r)&&!Z(r,I)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&E.getLogger(this.declaredClass).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&E.getLogger(this.declaredClass).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),e.serviceObb||o.push(I[0],I[1],I[2])}}_createGraphics(e,t,i,r){const o=e.length,s=3,a=this._getObjectIdField(),n=this.processor.graphicsCore,d=new Array,l=this.view.spatialReference;for(let p=0;p<o;p++){const m=e[p],g={};m!=null&&(g[a]=m);const v=m??F.generateUID(),w=p*s,j=isNaN(t[w+2])?void 0:t[w+2],N=te(t[w],t[w+1],j,l),x=this.loadedGraphics.get(v);if(_(x))(x.level==null||x.level<r)&&(y.property="geometry",y.graphic=x,y.oldValue=U(x.geometry),y.newValue=N,x.geometry=N,x.level=r,n.graphicUpdateHandler(y)),d.push(x);else{const V=F.generateUID();d.push({objectId:v,uid:V,geometry:N,attributes:g,visible:!0,nodeIndex:i,level:r})}}return d}_updateNodeMemory(e){e.memory=4096+(_(e.numFeatures)?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce((i,r)=>re(r)+i,512+8*e.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode((e,t)=>{if(e){const i=e.node;this._updateNodeMemory(i),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)}),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this.loadedGraphics.getNode(e);return f(t)?null:(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeNode(e),this._treeDebugger&&this._treeDebugger.update(),t)}async loadCachedNodeData(e){var t;return(t=this._memCache)==null?void 0:t.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,i,r){this.loadedGraphics.hasNode(e.index)?E.getLogger(this.declaredClass).error("I3S node "+e.id+" already added"):(await this._i3sOverrides.apply(t.featureIds,i,r),this.loadedGraphics.addNode(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),t.attributeInfo=i,this._attributeValuesChanged(t),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this.loadedGraphics.forEachNode(t=>e.push(t.node.id)),e.sort()}getVisibleNodes(){const e=new Array;return this.loadedGraphics.forEachNode(t=>e.push(t.node)),e}getLoadedNodeIndices(e){this.loadedGraphics.forEachNode((t,i)=>e.push(i))}getLoadedAttributes(e){const t=this.loadedGraphics.getNode(e);if(_(t)&&_(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this.loadedGraphics.getNode(e);if(_(t)&&_(t.attributeInfo))return t.attributeInfo.attributeData}_setAttributeData(e,t){const i=this.loadedGraphics.getNode(e);f(i)||f(i.attributeInfo)||(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,i){const r=this.loadedGraphics.getNode(e);f(r)||(await this._i3sOverrides.apply(r.featureIds,t,i),r.attributeInfo=t,this._attributeValuesChanged(r))}_attributeValuesChanged(e){if($(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.graphics.map(i=>i.uid);this.processor.graphicsCore.updateLabelingInfo(t)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||X}async _rendererChange(e,t){const{layer:{fieldsIndex:i}}=this,r=new Set;let o,s;e?(await e.collectRequiredFields(r,i),o=Array.from(r).sort()):o=[],r.clear(),t?(await t.collectRequiredFields(r,i),s=Array.from(r).sort()):s=[],o.length===s.length&&o.every((a,n)=>o[n]===s[n])||this._reloadAllNodes()}_rangeInfosChanged(e){e!=null&&e.length>0&&E.getLogger(this.declaredClass).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode(e=>this._filterNode(e))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,i=this._excludeObjectIdsSorted,r=this._getObjectIdField();for(const o of e.graphics){const s=o.visible,a=!t||this._evaluateClause(t,o),n=f(i)||Q(i,o.attributes[r])<0;o.visible=a&&n,s!==o.visible&&(y.graphic=o,y.property="visible",y.oldValue=s,y.newValue=o.visible,this.processor.graphicsCore.graphicUpdateHandler(y))}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return _(this.filter)?this.filter.createQuery(e):new A(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t==null?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(f(e)?this.createQuery():A.from(e))}_setupQueryEngine(){const e=()=>this.processor.featureStore;this._queryEngine=new de({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return e()},hasZ:this.hasZ,hasM:this.hasM},priority:Ie.FEATURE_QUERY_ENGINE})}getUsedMemory(){var e,t;return((t=(e=this.processor)==null?void 0:e.graphicsCore)==null?void 0:t.usedMemory)??0}getUnloadedMemory(){var e,t,i;return .8*((((e=this._controller)==null?void 0:e.unloadedMemoryEstimate)??0)+(((i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.unprocessedMemoryEstimate)??0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(e){he(this._attributeEditingContext,e)}get _attributeEditingContext(){const e=this._getObjectIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,forEachNode:t=>this.loadedGraphics.forEachNode(i=>t(i.node,i.featureIds)),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:t=>this.getAttributeData(t),setAttributeData:(t,i,r)=>{this._setAttributeData(t,i);const o=this.loadedGraphics.getNode(t);if(_(r)){const s=this.loadedGraphics.get(r.attributes[e]);_(s)&&this.processor.graphicsCore.recreateGraphics([s])}else _(o)&&this.processor.graphicsCore.recreateGraphics(o.graphics)},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this.loadedGraphics.nodeCount,core:this.processor.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return{controller:this._controller,numNodes:this.loadedGraphics.nodeCount,loadedGraphics:this.loadedGraphics}}};c([u()],h.prototype,"processor",void 0),c([u({type:oe})],h.prototype,"filter",void 0),c([u()],h.prototype,"loadedGraphics",void 0),c([u()],h.prototype,"i3slayer",null),c([u()],h.prototype,"_controller",void 0),c([u()],h.prototype,"updating",void 0),c([u()],h.prototype,"suspended",void 0),c([u()],h.prototype,"holeFilling",void 0),c([u(ee)],h.prototype,"updatingProgress",void 0),c([u()],h.prototype,"updatingProgressValue",null),c([u(R.requiredFields)],h.prototype,"requiredFields",null),c([u(R.availableFields)],h.prototype,"availableFields",void 0),c([u()],h.prototype,"_fieldsHelper",void 0),c([u({type:Number})],h.prototype,"maximumNumberOfFeatures",null),c([u({readOnly:!0})],h.prototype,"maximumNumberOfFeaturesExceeded",null),c([u()],h.prototype,"_excludeObjectIdsSorted",null),c([u({readOnly:!0})],h.prototype,"lodFactor",null),c([u({readOnly:!0})],h.prototype,"hasM",null),c([u({readOnly:!0})],h.prototype,"hasZ",null),h=c([H("esri.views.3d.layers.SceneLayerGraphicsView3D")],h);const Ys=h;function Ne(e){return"pointData"in e}function D(e){return"geometryBuffer"in e&&e.geometryBuffer!==null}function Ce(e,t,i){const r=t.attributeInfo;if(f(r)||f(r.loadedAttributes)||f(r.attributeData))return!1;let o=!1;for(const{name:s}of r.loadedAttributes)if(r.attributeData[s]){const a=L(r.attributeData[s],i);a!==e.attributes[s]&&(e.attributes[s]=a,o=!0)}return o}function $(e){const t=e.attributeInfo,i=e.node.index;if(!(f(t)||f(t.loadedAttributes)||f(t.attributeData)))for(let r=0;r<e.graphics.length;r++){const o=e.graphics[r];if(o.nodeIndex===i){o.attributes||(o.attributes={});for(const{name:s}of t.loadedAttributes)t.attributeData[s]&&(o.attributes[s]=L(t.attributeData[s],r))}}}function Oe(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.zmin!=null&&e.zmax!=null&&(e.zmin-=t,e.zmax+=t),e.mmin!=null&&e.mmax!=null&&(e.mmin-=t,e.mmax+=t),e}const De={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},I=B(),y={graphic:null,property:null,oldValue:null,newValue:null};export{Ys as default};
