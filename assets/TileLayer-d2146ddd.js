import{e as s,y as a,s as v,a as g}from"./jsonMap-ffa742d3.js";import{L as _,U as c,g as S,F as T}from"./request-09e7d9b2.js";import{a as u}from"./Error-5cdd6e0a.js";import{a as b}from"./HandleOwner-6217a02e.js";import{l as w}from"./loadAll-8ca49458.js";import{r as h}from"./typedArrayUtil-bf9f210a.js";import{O}from"./MultiOriginJSONSupport-06f8f24a.js";import{w as $}from"./promiseUtils-5940888c.js";import{f as y,o as R,r as U}from"./Extent-22afa84a.js";import{b as W}from"./Layer-524734fa.js";import{i as L}from"./APIKeyMixin-ef4ccb38.js";import{s as P}from"./ArcGISCachedService-863a5c01.js";import{E as A,y as D,Z as j}from"./SublayersOwner-1cb48ee7.js";import{p as B}from"./ArcGISService-24587a68.js";import{n as C}from"./BlendLayer-793ff14a.js";import{o as I}from"./CustomParametersMixin-2798ec18.js";import{c as M,f as N}from"./OperationalLayer-db187f46.js";import{_ as k}from"./PortalLayer-d69e402d.js";import{p as J}from"./RefreshableLayer-12bc7ba2.js";import{t as q}from"./ScaleRangeLayer-d1b04b80.js";import{d as G,g as E,m as V}from"./arcgisLayerUrl-1b8d6c52.js";import{e as x}from"./imageBitmapUtils-bd6555f6.js";import"./string-53224faa.js";import"./ArrayPool-b51874dd.js";import"./nextTick-3ee5a785.js";import"./preload-helper-41c905a7.js";import"./reactiveUtils-53e5756b.js";import"./asyncUtils-24bd37b2.js";import"./Collection-74ae958a.js";import"./Evented-686173eb.js";import"./SimpleObservable-bd2c3ae8.js";import"./Loadable-40ecd3b9.js";import"./Promise-755e47e5.js";import"./Ellipsoid-89682c5e.js";import"./geometry-7d866d3f.js";import"./Polyline-82cb63bc.js";import"./typeUtils-1714017f.js";import"./Identifiable-e4f9b04c.js";import"./TilemapCache-6dc9c0d9.js";import"./TileInfo-9973cd47.js";import"./aaBoundingRect-2fb32e32.js";import"./mathUtils-ae09f98b.js";import"./vec3-8818fe1c.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./byteSizeEstimations-f0cab514.js";import"./LRUCache-86d9ad15.js";import"./MemCache-b4d68123.js";import"./Version-621cc6b7.js";import"./CollectionFlattener-80d223f1.js";import"./PopupTemplate-81dc9b83.js";import"./Clonable-7fa7ad97.js";import"./fieldUtils-d430f46c.js";import"./arcadeOnDemand-dd48afd7.js";import"./enumeration-925aa0f6.js";import"./number-036ac4ef.js";import"./locale-fe7cc1d0.js";import"./UniqueValueRenderer-80c8e628.js";import"./symbols-5f42cb0e.js";import"./CIMSymbol-8f55d4ab.js";import"./Color-7b46c33a.js";import"./colorUtils-639f4d25.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-d4a4b602.js";import"./symbolLayerUtils3D-5cf2dcce.js";import"./aaBoundingBox-fb003858.js";import"./persistableUrlUtils-3635dccc.js";import"./Symbol3DAnchorPosition2D-e9d8a8f4.js";import"./collectionUtils-423a192d.js";import"./Portal-8dfa7a94.js";import"./PortalGroup-00fb77a4.js";import"./PortalUser-9579f611.js";import"./ColorStop-29c89bbb.js";import"./diffUtils-1bae97a1.js";import"./colorRamps-18bbdf60.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-61985981.js";import"./Graphic-5dcfa25e.js";import"./jsonUtils-36bf3d33.js";import"./compilerUtils-7bf6df9e.js";import"./lengthUtils-3c9047c4.js";import"./jsonUtils-27937179.js";import"./layerUtils-eef15b39.js";import"./styleUtils-689841ac.js";import"./jsonUtils-9b4d797d.js";import"./DictionaryLoader-1c3435ac.js";import"./deprecate-ba25fc78.js";import"./heatmapUtils-8ee685fd.js";import"./vec4f64-6d0e93be.js";import"./serviceCapabilitiesUtils-22f436bd.js";import"./QueryTask-81db9269.js";import"./Query-b0193ce7.js";import"./TimeExtent-64e16588.js";import"./Field-945b2973.js";import"./fieldType-24ac97df.js";import"./normalizeUtils-353ec0fc.js";import"./normalizeUtilsCommon-d8ea404e.js";import"./executeForIds-9d8798ea.js";import"./query-b4dff312.js";import"./pbfQueryUtils-481b10bc.js";import"./pbf-845dcafd.js";import"./OptimizedFeature-3e582950.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-f6e44ca7.js";import"./zscale-baa108ea.js";import"./executeQueryJSON-044ac84b.js";import"./FeatureSet-b4fbf079.js";import"./featureConversionUtils-aead6959.js";import"./FeatureType-017f886c.js";import"./FeatureTemplate-5a472038.js";import"./FieldsIndex-113320d3.js";import"./labelingInfo-e65ecbf4.js";import"./labelUtils-b68da70f.js";import"./defaultsJSON-59981e75.js";import"./AttachmentQuery-f1085685.js";import"./popupUtils-b8625101.js";import"./sublayerUtils-225416ed.js";import"./mat4f32-60a2394b.js";import"./mat4-f0dc8788.js";import"./ElevationInfo-005ddd87.js";import"./PortalItem-4d7e1038.js";import"./assets-94d592bf.js";import"./portalItemUtils-0655aa33.js";import"./projection-4ac247db.js";const d=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let i=class extends C(A(q(M(k(P(D(B(O(b(J(L(I(W))))))))))))){constructor(...r){super(...r),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(r,e){return typeof r=="string"?{url:r,...e}:r}load(r){const e=h(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch($).then(()=>this._fetchService(e))),Promise.resolve(this)}get attributionDataUrl(){var e;const r=(e=this.parsedUrl)==null?void 0:e.path.toLowerCase();return r?this._getDefaultAttribution(this._getMapName(r)):null}readSpatialReference(r,e){return(r=r||e.tileInfo&&e.tileInfo.spatialReference)&&y.fromJSON(r)}writeSublayers(r,e,t,o){if(!this.loaded||!r)return;const n=r.slice().reverse().flatten(({sublayers:l})=>l&&l.toArray().reverse()).toArray(),p=[],m={writeSublayerStructure:!1,...o};n.forEach(l=>{const f=l.write({},m);p.push(f)}),p.some(l=>Object.keys(l).length>1)&&(e.layers=p)}get tileServers(){var r;return this._getDefaultTileServers((r=this.parsedUrl)==null?void 0:r.path)}castTileServers(r){return Array.isArray(r)?r.map(e=>_(e).path):null}fetchTile(r,e,t,o={}){const{signal:n}=o,p=this.getTileUrl(r,e,t),m={responseType:"image",signal:n,query:{...this.refreshParameters}};return c(p,m).then(l=>l.data)}async fetchImageBitmapTile(r,e,t,o={}){const{signal:n}=o,p=this.getTileUrl(r,e,t),m={responseType:"blob",signal:n,query:{...this.refreshParameters}},{data:l}=await c(p,m);return x(l,p)}getTileUrl(r,e,t){var m,l;const o=!this.tilemapCache&&this.supportsBlankTile,n=S({...(m=this.parsedUrl)==null?void 0:m.query,blankTile:!o&&null,...this.customParameters,token:this.apiKey}),p=this.tileServers;return`${p&&p.length?p[e%p.length]:(l=this.parsedUrl)==null?void 0:l.path}/tile/${r}/${e}/${t}${n?"?"+n:""}`}loadAll(){return w(this,r=>{r(this.allSublayers)})}_fetchService(r){return new Promise((e,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void e({data:this.sourceJSON})}if(!this.parsedUrl)throw new u("tile-layer:undefined-url","layer's url is not defined");const o=G(this.parsedUrl.path);if(h(o)&&o.serverType==="ImageServer")throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(e,t)}).then(e=>{let t=this.url;if(e.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=e.data,this.read(e.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!E(t))return this._fetchServerVersion(t,r).then(o=>{this.read({currentVersion:o})}).catch(()=>{})})}_fetchServerVersion(r,e){if(!V(r))return Promise.reject();const t=r.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return c(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(o=>{if(o.data&&o.data.currentVersion)return o.data.currentVersion;throw new u("tile-layer:version-not-available")})}_getMapName(r){const e=r.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return e?e[2]:void 0}_getDefaultAttribution(r){if(r==null)return null;let e;r=r.toLowerCase();for(let t=0,o=d.length;t<o;t++)if(e=d[t],e.toLowerCase().includes(r))return T("//static.arcgis.com/attribution/"+e);return null}_getDefaultTileServers(r){if(r==null)return[];const e=r.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=r.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return e||t?[r,r.replace(e?/server\.arcgisonline/i:/services\.arcgisonline/i,e?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};s([a({readOnly:!0})],i.prototype,"attributionDataUrl",null),s([a({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),s([a({json:{read:!0,write:!0}})],i.prototype,"blendMode",void 0),s([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),s([a({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),s([a({type:Boolean})],i.prototype,"resampling",void 0),s([a()],i.prototype,"sourceJSON",void 0),s([a({type:y})],i.prototype,"spatialReference",void 0),s([R("spatialReference",["spatialReference","tileInfo"])],i.prototype,"readSpatialReference",null),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),s([a({readOnly:!0})],i.prototype,"sublayers",void 0),s([U("sublayers",{layers:{type:[j]}})],i.prototype,"writeSublayers",null),s([a({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),s([a()],i.prototype,"tileServers",null),s([v("tileServers")],i.prototype,"castTileServers",null),s([a({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),s([a(N)],i.prototype,"url",void 0),i=s([g("esri.layers.TileLayer")],i),i.prototype.fetchTile.__isDefault__=!0;const lt=i;export{lt as default};
