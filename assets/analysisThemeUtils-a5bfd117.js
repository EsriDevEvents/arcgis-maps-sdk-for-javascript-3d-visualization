import{i as tt}from"./Segment-0dc6a9a8.js";import"./geometry-7d866d3f.js";import{a as F,b as T}from"./Error-5cdd6e0a.js";import{N as et,D as nt,f as at,$ as j}from"./Extent-22afa84a.js";import{n as g,o as rt,w as it}from"./projection-4ac247db.js";import"./Polyline-82cb63bc.js";import{x as C}from"./screenUtils-410d12c0.js";import{o as st,v as ot}from"./vec2-848c6cf0.js";import{o as ct,u as ut,g as ht}from"./vec3-8818fe1c.js";import{l as q}from"./Color-7b46c33a.js";function lt(t){let{r:e,g:n,b:a,a:r}=t;return r<1&&(e=Math.round(r*e+255*(1-r)),n=Math.round(r*n+255*(1-r)),a=Math.round(r*a+255*(1-r))),new q({r:e,g:n,b:a})}function ft(t){const{r:e,g:n,b:a}=lt(t);return .2126*e+.7152*n+.0722*a}const St={readOnly:!0,get(){return tt(this.view)}};var G;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(G||(G={}));function O(t){if(!t)return null;if(nt(t)&&t.wkid){const e=rt[t.wkid];if(e)return e}if(t.wkt){const e=mt(t.wkt);if(e)return e}return null}function mt(t){const e=it.exec(t);if(!e||e.length!==2)return null;const n=e[1].split(",");if(!n||n.length<3)return null;const a=parseFloat(n[1]),r=parseFloat(n[2]);return isNaN(a)||isNaN(r)?null:{a,f:r===0?0:1/r}}function pt(t){const e=O(t??at.WGS84);if(Mt(e))return e;const n=e.a*(1-e.f);return Object.assign(e,{b:n,eSq:1-(n/e.a)**2,radius:(2*e.a+n)/3,densificationRatio:1e4/((2*e.a+n)/3)})}function Mt(t){return t!=null&&"b"in t&&"eSq"in t&&"radius"in t}function dt(t){return O(t)!==null}function kt(t,e="meters"){if(!t)throw new F("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(a=>!dt(a.spatialReference)))throw new F("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const n=[];for(let a=0;a<t.length;a++){const r=t[a],{spatialReference:d}=r,$=r.type==="polyline"?r.paths:r.rings;let s=0;for(let v=0;v<$.length;v++){const o=$[v];let f=0;for(let m=1;m<o.length;m++){const _=o[m-1][0],z=o[m][0],R=o[m-1][1],u=o[m][1];if(R!==u||_!==z){const c=new gt;$t(c,[_,R],[z,u],d),f+=c.distance}}s+=f}s=et(s,"meters",e),n.push(s)}return n}class gt{constructor(e=0,n,a){this.distance=e,this.azimuth=n,this.reverseAzimuth=a}}function $t(t,e,n,a){const r=e[0]*g,d=e[1]*g,$=n[0]*g,s=n[1]*g,{a:v,b:o,f,radius:m}=pt(a),_=$-r,z=Math.atan((1-f)*Math.tan(d)),R=Math.atan((1-f)*Math.tan(s)),u=Math.sin(z),c=Math.cos(z),w=Math.sin(R),h=Math.cos(R);let S,b,p,i,A,D,N,P,U,y,k=1e3,l=_;do{if(N=Math.sin(l),P=Math.cos(l),p=Math.sqrt(h*N*(h*N)+(c*w-u*h*P)*(c*w-u*h*P)),p===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;A=u*w+c*h*P,D=Math.atan2(p,A),U=c*h*N/p,b=1-U*U,i=A-2*u*w/b,isNaN(i)&&(i=0),y=f/16*b*(4+f*(4-3*b)),S=l,l=_+(1-y)*f*U*(D+y*p*(i+y*A*(2*i*i-1)))}while(Math.abs(l-S)>1e-12&&--k>0);if(k===0){const Q=m,V=Math.acos(Math.sin(d)*Math.sin(s)+Math.cos(d)*Math.cos(s)*Math.cos($-r))*Q,x=$-r,X=Math.sin(x)*Math.cos(s),Y=Math.cos(d)*Math.sin(s)-Math.sin(d)*Math.cos(s)*Math.cos(x),Z=Math.atan2(X,Y);return t.azimuth=Z/g,t.distance=V,t.reverseAzimuth=void 0,t}const M=b*(v*v-o*o)/(o*o),E=M/1024*(256+M*(M*(74-47*M)-128)),J=o*(1+M/16384*(4096+M*(M*(320-175*M)-768)))*(D-E*p*(i+E/4*(A*(2*i*i-1)-E/6*i*(4*p*p-3)*(4*i*i-3)))),K=Math.atan2(h*Math.sin(l),c*w-u*h*Math.cos(l)),L=Math.atan2(c*Math.sin(l),c*w*Math.cos(l)-u*h);return t.azimuth=K/g,t.distance=J,t.reverseAzimuth=L/g,t}function xt(t,e){if(ct(e,0,0,0),t.length>0){for(let n=0;n<t.length;++n)ut(e,e,t[n]);ht(e,e,1/t.length)}}function Ft(t,e,n,a){a.projectToRenderScreen(t,I),a.projectToRenderScreen(e,W),st(n,wt,vt),ot(n,n)}const I=C(),vt=I,W=C(),wt=W;let jt=class{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=j(this._spatialReference,1),this._metersPerElevationUnit=j(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}};function B(t,e){const n=t.a*e;return ft(t)>225?new q([0,0,0,n]):new q([255,255,255,n])}function H(t,e){const n=new q(t);return n.a*=e,n}function _t(t=1){return H(T.analysisTheme.accentColor,t)}function Tt(t=1){return B(_t(),t)}function zt(t=1){return H(T.analysisTheme.textColor,t)}function Ct(t=1){return B(zt(),t)}export{dt as M,zt as a,$t as b,xt as c,St as d,G as e,Ft as f,_t as i,Ct as s,jt as t,Tt as u,gt as v,kt as y};
