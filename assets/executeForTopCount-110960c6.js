import{f as i}from"./normalizeUtils-353ec0fc.js";import{a as p}from"./queryTopFeatures-010778ba.js";import{v as a}from"./TopFeaturesQuery-d2b31d08.js";import"./Error-5cdd6e0a.js";import"./string-53224faa.js";import"./typedArrayUtil-bf9f210a.js";import"./Polyline-82cb63bc.js";import"./jsonMap-ffa742d3.js";import"./ArrayPool-b51874dd.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-5940888c.js";import"./Extent-22afa84a.js";import"./Ellipsoid-89682c5e.js";import"./normalizeUtilsCommon-d8ea404e.js";import"./jsonUtils-36bf3d33.js";import"./geometry-7d866d3f.js";import"./typeUtils-1714017f.js";import"./request-09e7d9b2.js";import"./preload-helper-41c905a7.js";import"./query-b4dff312.js";import"./pbfQueryUtils-481b10bc.js";import"./pbf-845dcafd.js";import"./OptimizedFeature-3e582950.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-f6e44ca7.js";import"./zscale-baa108ea.js";import"./TimeExtent-64e16588.js";async function H(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{H as executeForTopCount};
