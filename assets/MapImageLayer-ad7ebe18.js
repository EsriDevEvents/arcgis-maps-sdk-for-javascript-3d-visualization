import{M as v,H as f,e as p,y as a,a as w}from"./jsonMap-ffa742d3.js";import{U as g}from"./request-09e7d9b2.js";import{T as I}from"./TimeExtent-64e16588.js";import{a as b}from"./Error-5cdd6e0a.js";import{a as $}from"./HandleOwner-6217a02e.js";import{l as O}from"./loadAll-8ca49458.js";import{r as T}from"./typedArrayUtil-bf9f210a.js";import{O as E}from"./MultiOriginJSONSupport-06f8f24a.js";import{w as M,j as R}from"./promiseUtils-5940888c.js";import{T as L}from"./ArrayPool-b51874dd.js";import{e as P,o as j,r as F}from"./Extent-22afa84a.js";import{i as N}from"./scaleUtils-a3b834c2.js";import{b as J}from"./Layer-524734fa.js";import{i as U}from"./APIKeyMixin-ef4ccb38.js";import{E as _,y as q,Z as k}from"./SublayersOwner-1cb48ee7.js";import{p as A}from"./ArcGISService-24587a68.js";import{n as V}from"./BlendLayer-793ff14a.js";import{o as z}from"./CustomParametersMixin-2798ec18.js";import{c as H,f as B}from"./OperationalLayer-db187f46.js";import{_ as C}from"./PortalLayer-d69e402d.js";import{p as D}from"./RefreshableLayer-12bc7ba2.js";import{t as G}from"./ScaleRangeLayer-d1b04b80.js";import{a as K}from"./TemporalLayer-f231f22a.js";import{c as W}from"./ExportImageParameters-db22156e.js";import{e as Z}from"./imageBitmapUtils-bd6555f6.js";import{n as x}from"./sublayerUtils-225416ed.js";import{e as Q}from"./versionUtils-9a1e7983.js";import{a as S}from"./TimeReference-adaa7961.js";import"./string-53224faa.js";import"./nextTick-3ee5a785.js";import"./preload-helper-41c905a7.js";import"./reactiveUtils-53e5756b.js";import"./asyncUtils-24bd37b2.js";import"./Collection-74ae958a.js";import"./Evented-686173eb.js";import"./SimpleObservable-bd2c3ae8.js";import"./Loadable-40ecd3b9.js";import"./Promise-755e47e5.js";import"./Ellipsoid-89682c5e.js";import"./geometry-7d866d3f.js";import"./Polyline-82cb63bc.js";import"./typeUtils-1714017f.js";import"./Identifiable-e4f9b04c.js";import"./Version-621cc6b7.js";import"./CollectionFlattener-80d223f1.js";import"./PopupTemplate-81dc9b83.js";import"./Clonable-7fa7ad97.js";import"./fieldUtils-d430f46c.js";import"./arcadeOnDemand-dd48afd7.js";import"./enumeration-925aa0f6.js";import"./number-036ac4ef.js";import"./locale-fe7cc1d0.js";import"./UniqueValueRenderer-80c8e628.js";import"./symbols-5f42cb0e.js";import"./CIMSymbol-8f55d4ab.js";import"./Color-7b46c33a.js";import"./colorUtils-639f4d25.js";import"./mathUtils-ae09f98b.js";import"./vec3-8818fe1c.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-d4a4b602.js";import"./symbolLayerUtils3D-5cf2dcce.js";import"./aaBoundingBox-fb003858.js";import"./aaBoundingRect-2fb32e32.js";import"./persistableUrlUtils-3635dccc.js";import"./Symbol3DAnchorPosition2D-e9d8a8f4.js";import"./collectionUtils-423a192d.js";import"./Portal-8dfa7a94.js";import"./PortalGroup-00fb77a4.js";import"./PortalUser-9579f611.js";import"./ColorStop-29c89bbb.js";import"./diffUtils-1bae97a1.js";import"./colorRamps-18bbdf60.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-61985981.js";import"./Graphic-5dcfa25e.js";import"./jsonUtils-36bf3d33.js";import"./compilerUtils-7bf6df9e.js";import"./lengthUtils-3c9047c4.js";import"./jsonUtils-27937179.js";import"./layerUtils-eef15b39.js";import"./styleUtils-689841ac.js";import"./jsonUtils-9b4d797d.js";import"./DictionaryLoader-1c3435ac.js";import"./LRUCache-86d9ad15.js";import"./MemCache-b4d68123.js";import"./deprecate-ba25fc78.js";import"./heatmapUtils-8ee685fd.js";import"./vec4f64-6d0e93be.js";import"./serviceCapabilitiesUtils-22f436bd.js";import"./arcgisLayerUrl-1b8d6c52.js";import"./QueryTask-81db9269.js";import"./Query-b0193ce7.js";import"./Field-945b2973.js";import"./fieldType-24ac97df.js";import"./normalizeUtils-353ec0fc.js";import"./normalizeUtilsCommon-d8ea404e.js";import"./executeForIds-9d8798ea.js";import"./query-b4dff312.js";import"./pbfQueryUtils-481b10bc.js";import"./pbf-845dcafd.js";import"./OptimizedFeature-3e582950.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-f6e44ca7.js";import"./zscale-baa108ea.js";import"./executeQueryJSON-044ac84b.js";import"./FeatureSet-b4fbf079.js";import"./featureConversionUtils-aead6959.js";import"./FeatureType-017f886c.js";import"./FeatureTemplate-5a472038.js";import"./FieldsIndex-113320d3.js";import"./labelingInfo-e65ecbf4.js";import"./labelUtils-b68da70f.js";import"./defaultsJSON-59981e75.js";import"./AttachmentQuery-f1085685.js";import"./popupUtils-b8625101.js";import"./mat4f32-60a2394b.js";import"./mat4-f0dc8788.js";import"./ElevationInfo-005ddd87.js";import"./PortalItem-4d7e1038.js";import"./assets-94d592bf.js";import"./portalItemUtils-0655aa33.js";import"./projection-4ac247db.js";import"./floorFilterUtils-080a7cd2.js";import"./datetime-eed49b9b.js";let i=class extends V(K(G(_(q(A(H(C(E(D(U(z($(J))))))))))))){constructor(...t){super(...t),this.dateFieldsTimeReference=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeReference=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(t,o){return typeof t=="string"?{url:t,...o}:t}load(t){const o=T(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},t).catch(M).then(()=>this._fetchService(o))),Promise.resolve(this)}readImageFormat(t,o){const n=o.supportedImageFormatTypes;return n&&n.includes("PNG32")?"png32":"png24"}writeSublayers(t,o,n,e){var h;if(!this.loaded||!t)return;const s=t.slice().reverse().flatten(({sublayers:r})=>r&&r.toArray().reverse()).toArray();let m=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&((h=this.capabilities.exportMap)!=null&&h.supportsDynamicLayers)){const r=v(e.origin);if(r===f.PORTAL_ITEM){const c=this.createSublayersForOrigin("service").sublayers;m=x(s,c,f.SERVICE)}else if(r>f.PORTAL_ITEM){const c=this.createSublayersForOrigin("portal-item");m=x(s,c.sublayers,v(c.origin))}}const l=[],d={writeSublayerStructure:m,...e};let y=m;s.forEach(r=>{const c=r.write({},d);l.push(c),y=y||r.originOf("visible")==="user"}),l.some(r=>Object.keys(r).length>1)&&(o.layers=l),y&&(o.visibleLayers=s.filter(r=>r.visible).map(r=>r.id))}createExportImageParameters(t,o,n,e){const s=e&&e.pixelRatio||1;t&&this.version>=10&&(t=t.clone().shiftCentralMeridian());const m=new W({layer:this,floors:e==null?void 0:e.floors,scale:N({extent:t,width:o})*s}),l=m.toJSON();m.destroy();const d=!e||!e.rotation||this.version<10.3?{}:{rotation:-e.rotation},y=t&&t.spatialReference,h=y.wkid||JSON.stringify(y.toJSON());l.dpi*=s;const r={};if(e!=null&&e.timeExtent){const{start:c,end:u}=e.timeExtent.toJSON();r.time=c&&u&&c===u?""+c:`${c??"null"},${u??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(r.time="null,null");return{bbox:t&&t.xmin+","+t.ymin+","+t.xmax+","+t.ymax,bboxSR:h,imageSR:h,size:o+","+n,...l,...d,...r}}async fetchImage(t,o,n,e){const{data:s}=await this._fetchImage("image",t,o,n,e);return s}async fetchImageBitmap(t,o,n,e){const{data:s,url:m}=await this._fetchImage("blob",t,o,n,e);return Z(s,m)}async fetchRecomputedExtents(t={}){const o={...t,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:n}=await g(this.url,o),{extent:e,fullExtent:s,timeExtent:m}=n,l=e||s;return{fullExtent:l&&P.fromJSON(l),timeExtent:m&&I.fromJSON({start:m[0],end:m[1]})}}loadAll(){return O(this,t=>{t(this.allSublayers)})}serviceSupportsSpatialReference(t){return Q(this,t)}async _fetchImage(t,o,n,e,s){var d,y,h;const m={responseType:t,signal:(s==null?void 0:s.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(o,n,e,s),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";if(((d=m.query)==null?void 0:d.dynamicLayers)!=null&&!((h=(y=this.capabilities)==null?void 0:y.exportMap)!=null&&h.supportsDynamicLayers))throw new b("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:m.query});try{const{data:r}=await g(l,m);return{data:r,url:l}}catch(r){throw R(r)?r:new b("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:r})}}async _fetchService(t){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:o,ssl:n}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:t});n&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=o,this.read(o,{origin:"service",url:this.parsedUrl})}};p([a({type:S})],i.prototype,"dateFieldsTimeReference",void 0),p([a({type:Boolean})],i.prototype,"datesInUnknownTimezone",void 0),p([a()],i.prototype,"dpi",void 0),p([a()],i.prototype,"gdbVersion",void 0),p([a()],i.prototype,"imageFormat",void 0),p([j("imageFormat",["supportedImageFormatTypes"])],i.prototype,"readImageFormat",null),p([a({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],i.prototype,"imageMaxHeight",void 0),p([a({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],i.prototype,"imageMaxWidth",void 0),p([a()],i.prototype,"imageTransparency",void 0),p([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),p([a({json:{read:!1,write:!1}})],i.prototype,"labelsVisible",void 0),p([a({type:["ArcGISMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),p([a({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),p([a({type:S})],i.prototype,"preferredTimeReference",void 0),p([a()],i.prototype,"sourceJSON",void 0),p([a({json:{write:{ignoreOrigin:!0}}})],i.prototype,"sublayers",void 0),p([F("sublayers",{layers:{type:[k]},visibleLayers:{type:[L]}})],i.prototype,"writeSublayers",null),p([a({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),p([a({json:{read:!1},readOnly:!0,value:"map-image"})],i.prototype,"type",void 0),p([a(B)],i.prototype,"url",void 0),i=p([w("esri.layers.MapImageLayer")],i);const ge=i;export{ge as default};
