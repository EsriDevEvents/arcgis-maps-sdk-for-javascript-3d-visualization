import{u as S,e as o,y as r,a as h,t as w}from"./jsonMap-ffa742d3.js";import{a as m}from"./Error-5cdd6e0a.js";import{x as f,r as _,t as T}from"./typedArrayUtil-bf9f210a.js";import{O}from"./MultiOriginJSONSupport-06f8f24a.js";import{w as $}from"./promiseUtils-5940888c.js";import{a as L,U as x}from"./reactiveUtils-53e5756b.js";import"./ArrayPool-b51874dd.js";import{o as I}from"./Extent-22afa84a.js";import{g as M}from"./persistable-227af340.js";import{b as N}from"./Layer-524734fa.js";import{i as b}from"./APIKeyMixin-ef4ccb38.js";import{p as A}from"./ArcGISService-24587a68.js";import{c as U,d as j}from"./OperationalLayer-db187f46.js";import{_ as D}from"./PortalLayer-d69e402d.js";import{t as J}from"./ScaleRangeLayer-d1b04b80.js";import{E as V,L as c}from"./SceneService-fdd3dddd.js";import{s as K,l as P,u as E,m as R}from"./I3SLayerDefinitions-7bfc1943.js";import{L as z,U as C}from"./request-09e7d9b2.js";import{j as F}from"./Collection-74ae958a.js";import{f as d}from"./SceneModification-163046e6.js";import{c as k}from"./persistableUrlUtils-3635dccc.js";import"./string-53224faa.js";import"./nextTick-3ee5a785.js";import"./Ellipsoid-89682c5e.js";import"./preload-helper-41c905a7.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./uuid-73213768.js";import"./resourceExtension-3dd2f93a.js";import"./geometry-7d866d3f.js";import"./Polyline-82cb63bc.js";import"./typeUtils-1714017f.js";import"./Evented-686173eb.js";import"./Identifiable-e4f9b04c.js";import"./Loadable-40ecd3b9.js";import"./Promise-755e47e5.js";import"./arcgisLayerUrl-1b8d6c52.js";import"./TimeExtent-64e16588.js";import"./ElevationInfo-005ddd87.js";import"./fieldUtils-d430f46c.js";import"./arcadeOnDemand-dd48afd7.js";import"./lengthUtils-3c9047c4.js";import"./opacityUtils-d4a4b602.js";import"./asyncUtils-24bd37b2.js";import"./layerUtils-eef15b39.js";import"./Portal-8dfa7a94.js";import"./locale-fe7cc1d0.js";import"./PortalGroup-00fb77a4.js";import"./PortalUser-9579f611.js";import"./PortalItem-4d7e1038.js";import"./assets-94d592bf.js";import"./portalItemUtils-0655aa33.js";import"./projection-4ac247db.js";import"./mathUtils-ae09f98b.js";import"./vec3-8818fe1c.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./SimpleObservable-bd2c3ae8.js";import"./mat4-f0dc8788.js";import"./aaBoundingRect-2fb32e32.js";import"./zscale-baa108ea.js";import"./originUtils-1469eeaf.js";import"./HeightModelInfo-73f516f9.js";import"./I3SIndexInfo-1765b03c.js";import"./resourceUtils-44dc8ca3.js";import"./enumeration-925aa0f6.js";var a;let p=a=class extends S(F.ofType(d)){constructor(t){super(t),this.url=null}clone(){return new a({url:this.url,items:this.items.map(t=>t.clone())})}toJSON(t){return this.toArray().map(i=>i.toJSON(t)).filter(i=>!!i.geometry)}static fromJSON(t,i){const s=new a;for(const n of t)s.add(d.fromJSON(n,i));return s}static async fromUrl(t,i,s){const n={url:z(t),origin:"service"},v=await C(t,{responseType:"json",signal:f(s,"signal")}),g=i.toJSON(),y=[];for(const l of v.data)y.push(d.fromJSON({...l,geometry:{...l.geometry,spatialReference:g}},n));return new a({url:t,items:y})}};o([r({type:String})],p.prototype,"url",void 0),p=a=o([h("esri.layers.support.SceneModifications")],p);const u=p;let e=class extends V(A(U(D(J(O(b(N))))))){constructor(...t){super(...t),this._handles=new w,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this._handles.destroy()}initialize(){this._handles.add(L(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,x))}normalizeCtorArgs(t,i){return typeof t=="string"?{url:t,...i}:t}readModifications(t,i,s){this._modificationsSource={url:k(t,s),context:s}}async load(t){return this.addResolvingPromise(this._doLoad(t)),this}async _doLoad(t){const i=f(t,"signal");try{await this.loadFromPortal({supportedTypes:["Scene Service"]},t)}catch(s){$(s)}if(await this._fetchService(i),_(this._modificationsSource)){const s=await u.fromUrl(this._modificationsSource.url,this.spatialReference,t);this.setAtOrigin("modifications",s,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,i)}beforeSave(){if(!T(this._modificationsSource))return this.load().then(()=>{},()=>{})}async saveAs(t,i){return this._debouncedSaveOperations(c.SAVE_AS,{...i,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},t)}async save(){const t={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(c.SAVE,t)}validateLayer(t){if(t.layerType&&t.layerType!=="IntegratedMesh")throw new m("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:t.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new m("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new m("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};o([r({type:String,readOnly:!0})],e.prototype,"geometryType",void 0),o([r({type:["show","hide"]})],e.prototype,"listMode",void 0),o([r({type:["IntegratedMeshLayer"]})],e.prototype,"operationalLayerType",void 0),o([r({json:{read:!1},readOnly:!0})],e.prototype,"type",void 0),o([r({type:K,readOnly:!0})],e.prototype,"nodePages",void 0),o([r({type:[P],readOnly:!0})],e.prototype,"materialDefinitions",void 0),o([r({type:[E],readOnly:!0})],e.prototype,"textureSetDefinitions",void 0),o([r({type:[R],readOnly:!0})],e.prototype,"geometryDefinitions",void 0),o([r({readOnly:!0})],e.prototype,"serviceUpdateTimeStamp",void 0),o([r({type:u}),M({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],e.prototype,"modifications",void 0),o([I(["web-scene","portal-item"],"modifications")],e.prototype,"readModifications",null),o([r(j)],e.prototype,"elevationInfo",void 0),o([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],e.prototype,"path",void 0),e=o([h("esri.layers.IntegratedMeshLayer")],e);const oe=e;export{oe as default};
