import{e as a,y as l,a as re,v as me,t as Ie}from"./jsonMap-ffa742d3.js";import{r as _,l as Ee,a as v,t as q,e as W}from"./typedArrayUtil-bf9f210a.js";import"./ArrayPool-b51874dd.js";import{v as Ue,b as je,c as oe,e as ae,t as Xe,i as J,u as Ze,s as Qe,a as Ye,d as et}from"./analysisThemeUtils-a5bfd117.js";import{a as tt,n as st,g as E,b as it}from"./LineVisualElement-4382615e.js";import{l as N,U as _e,w as he}from"./reactiveUtils-53e5756b.js";import{g as F,y as le,U as ne,A as We,R as rt,K as fe,j as Le,i as nt}from"./projection-4ac247db.js";import{c as de,f as ot,a as at}from"./spatialReferenceEllipsoidUtils-88aa82c4.js";import{m as ht,s as lt}from"./mathUtils-ae09f98b.js";import{a as U,o as ye,g as X,m as ve,v as dt,b as Se,f as ce}from"./Segment-0dc6a9a8.js";import{r as we,m as ct,a as pt}from"./vec2-848c6cf0.js";import{n as Ce,r as Fe}from"./vec2f64-70cfd09e.js";import{n as c,o as qe,u as te,g as Y,p as ut,P as $,x as Ne,a as ee,z as pe,_ as ke,j as mt,e as se}from"./vec3-8818fe1c.js";import{n as gt,r as ie}from"./vec4f64-6d0e93be.js";import{f as Be,O as _t,F as be,w as ft,N as Lt,a1 as yt,a2 as vt,K as St,a as wt}from"./Extent-22afa84a.js";import{n as Ct}from"./sphere-a48b65b1.js";import{J as bt,A as Pt,l as At,f as Mt,E as Z,B as $t,d as Vt,v as Rt}from"./objectResourceUtils-3685cb27.js";import{geodesicArea as Gt}from"./geometryEngine-ddae1820.js";import{v as Dt}from"./Polyline-82cb63bc.js";import{aD as xt,aE as Pe,aF as zt,aG as Ot,a4 as Tt,a5 as It,aH as Et}from"./SceneView-7ac05f56.js";import{n as Ae}from"./Indices-f9b34f39.js";import{r as Ut}from"./earcut-61f7b102.js";import"./plane-01584357.js";import{n as jt}from"./Evented-686173eb.js";import{s as Wt}from"./Error-5cdd6e0a.js";import{D as Me,m as Ft}from"./aaBoundingRect-2fb32e32.js";import{V as $e,g as qt,w as Nt,p as kt}from"./EditGeometryOperations-0df36f69.js";import{l as j}from"./Color-7b46c33a.js";import"./intl-87d72dbe.js";import"./string-53224faa.js";import{I as Bt,q as Ht}from"./mat4-f0dc8788.js";import{e as Kt}from"./mat4f64-abdda1bb.js";import{D as Ve,a as Re}from"./vec4-c7a19f0d.js";import{s as Ge}from"./Attribute-f72d3f37.js";import{E as Jt,u as Xt,g as D}from"./VisualVariablePassParameters-f892560d.js";import{O as T}from"./VertexAttribute-15d1866a.js";import{h as De}from"./Matrix3PassUniform-df6e2166.js";import{_ as Zt}from"./preload-helper-41c905a7.js";import{t as Qt,l as Yt,e as es,o as ts,W as ss,a as is,_ as rs}from"./EvaluateSceneLighting.glsl-14c608ff.js";import{e as ns,o as k}from"./TransparencyPassType-c3841b0a.js";import{n as os}from"./MultipassTerrainTest.glsl-8b279fcd.js";import{v as as}from"./View.glsl-879c1eaf.js";import{e as hs}from"./Texture2DPassUniform-268e8d2d.js";import{e as xe}from"./Float4PassUniform-9354414b.js";import{o as ls,a as ze}from"./ShaderBuilder-be7ca791.js";import{R as Q}from"./enums-fc527c7c.js";import{r as z}from"./ShaderTechniqueConfiguration-0fa0f78c.js";import{s as ds}from"./DefaultTechniqueConfiguration-b54ae0b1.js";import{s as cs}from"./locale-fe7cc1d0.js";import{u as ps}from"./messages-1516d146.js";function us(t,e){const s=e.center;qe(s,0,0,0);for(let r=0;r<t.length;++r)te(s,s,t[r]);Y(s,s,1/t.length);let i=0;for(let r=0;r<t.length;++r)i=Math.max(i,ut(s,t[r]));e.radius=Math.sqrt(i)}function ms(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");xt(t[0],t[1],t[2],e)}function gs(t,e){return $(t,e)+t[3]}function _s(t,e,s){return F(t,V,s)&&F(e,R,s)?Ne(V,R):0}function fs(t,e){if(!le(t,V)||!le(e,R))return 0;const s=new Ue;return je(s,[V[0],V[1]],[R[0],R[1]]),s.distance}function Ls(t,e,s){const i=new Ue;return je(i,[t[0],t[1]],[e[0],e[1]],s),i.distance}function ys(t,e,s,i){const r=Ss;return ne(t,i,V)&&ne(e,i,R)&&ne(s,i,ue)?(r.setPoint(0,0,V),r.setPoint(0,1,R),r.setPoint(0,2,ue),Math.abs(Gt(r,"square-meters"))):0}function vs(t,e=null,s=!0){const r=(n,o)=>{if(o[0]===0&&o[1]===0&&o[2]===0)return!1;for(let h=0;h<n.length;++h)if($(o,n[h])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&ee(e,t[0]),!0;qe(S,0,0,0);for(let n=0;n<t.length;++n)te(S,S,t[n]);if(pe(S,S),r(t,S))return e&&ee(e,S),!0;if(!s)return!1;for(let n=0;n<t.length;++n)for(let o=0;o<t.length;++o)if(n!==o&&(ke(S,t[n],t[o]),pe(S,S),r(t,S)))return e&&ee(e,S),!0;return!1}const V=c(),R=c(),ue=c(),Ss=new Dt({rings:[[V,R,ue]],spatialReference:Be.WGS84}),S=c();function Oe(t){return Ut(ws(t),[],2)}function ws(t){const e=new Float64Array(2*t.length);for(let s=0;s<t.length;++s){const i=t[s],r=2*s;e[r+0]=i[0],e[r+1]=i[1]}return e}class Cs{constructor(e,s){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=c(),this.areaCentroidRenderCoords=c(),this.geodesicAreaCentroidRenderCoords=c(),this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=c(),this._planeWorldCoords=gt(),this._worldUp=c(),this._worldTangent=c(),this._frame=[c(),c(),c()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=c(),this._tempV=c(),this._tempVec3=c(),this._tempSphere={center:c(),radius:0},this._sceneView=e,this.unitNormalizer=s}update(e,s,i,r,n,o,h){const d=this.unitNormalizer,u=this._sceneView.renderSpatialReference,p=this.unitNormalizer.spatialReference,g=_(s);if(this._pathVersion===e.version&&this._validMeasurement===r&&!h&&this._hasCursorPoint===g&&this._mode===o)return!e.isValidPolygon&&(this._updateCursorSegmentLength(e,s),!0);this._pathVersion=e.version,this._validMeasurement=r,this._hasCursorPoint=g;const m=e.numVertices;this._resize(m);const y=de(i.spatialReference),b=We(i.spatialReference,y)&&rt(i.spatialReference),{positionsGeographic:P,positionsWorldCoords:B,positionsRenderCoords:A,positionsSpherical:x}=this;e.forEachVertexPosition((L,C)=>{bs(i.elevationProvider,L),F(L,B[C],p),F(L,A[C],u),b&&(le(L,P[C]),F(L,x[C],y),pe(x[C],x[C]))});const H=this._updatePathLengths(r);if(this.pathLength=this._length>1?U(d.normalizeDistance(H),"meters"):null,b){const L=this._updateGeodesicPathLengths(r,p);this.geodesicPathLength=this._length>1?U(L,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,s),this._updateMode(e,o),r?(this._updateArea(i,d,u,p,n),b&&this._updateGeodesicArea(i),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(c()),this.positionsRenderCoords.push(c()),this.positionsProjectedWorldCoords.push(Ce()),this.positionsFittedRenderCoords.push(c()),this.positionsGeographic.push(c()),this.positionsSpherical.push(c()),this.positionsStereographic.push(Ce()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorldCoords,i=this.pathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const o=i[n]=Ne(s[n],s[(n+1)%this._length]);(n<this._length-1||e)&&(r+=o)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let n=0;for(let o=0;o<this._length;++o){const h=r[o]=Ls(i[o],i[(o+1)%this._length],s??void 0);(o<this._length-1||e)&&(n+=h)}return n}_updateArea(e,s,i,r,n){const o=e.renderCoordsHelper,h=this.positionsWorldCoords,d=this.positionsRenderCoords,u=this.positionsProjectedWorldCoords,p=this.positionsFittedRenderCoords,g=this._planeWorldCoords,m=this._centroidRenderCoords;oe(d,m),o.worldUpAtPosition(m,this._worldUp),o.worldBasisAtPosition(m,Ct.X,this._worldTangent),fe(m,this._worldUp,i,this._worldUp,r),fe(m,this._worldTangent,i,this._worldTangent,r),h.length>2&&ms(h,g),this.fittingMode=this._selectFittingMode(g,h,this._worldUp,n);let y=0;if(this.fittingMode==="horizontal"){let L=-1/0;d.forEach((C,K)=>{const ge=o.getAltitude(d[K]);ge>L&&(L=ge,y=K)})}const b=h[y];let P=g,B=this._worldTangent;this.fittingMode==="horizontal"?P=this._worldUp:this.fittingMode==="vertical"&&(P=this._tempVec3,B=this._worldUp,Pe(g,this._worldUp,P)),ee(this._frame[2],P),Pe(B,P,this._frame[0]),ke(this._frame[1],this._frame[0],this._frame[2]),mt(this._frame[1],this._frame[1]);const A=this._tempVec3,x=this._tempU,H=this._tempV;for(let L=0;L<this._length;++L){const C=u[L],K=p[L];se(A,h[L],b),we(C,$(this._frame[0],A),$(this._frame[1],A)),Y(x,this._frame[0],C[0]),Y(H,this._frame[1],C[1]),te(A,x,H),te(A,A,b),Le(A,r,K,i)}this.perimeterLength=this._length>0?U(s.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,oe(p,this.areaCentroidRenderCoords),Le(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?ye(s.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:s,spatialReference:i}=e,{positionsSpherical:r,positionsStereographic:n}=this,o=this._tempVec3,h=vs(r,o);if(!h)return void(this.geodesicArea=null);const d=this._tempU,u=this._tempV;zt(o,d,u);for(let p=0;p<this._length;++p){const g=$(r[p],d),m=$(r[p],u),y=$(r[p],o);we(n[p],g/y,m/y)}Y(o,o,_t(i).radius),s.toRenderCoords(o,de(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?ye(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=ct(e[r],e[(r+1)%this._length]);return i}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];be(n,o,h,d)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsProjectedWorldCoords,s=this.triangleIndices=Ae(Oe(e));let i=0;for(let r=0;r<s.length;r+=3)i+=bt(e[s[r]],e[s[r+1]],e[s[r+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];be(n,o,h,d)&&(s.add(i),s.add(r))}}_computeGeodesicArea(){const e=this.positionsGeographic,s=this.positionsStereographic,i=this.geodesicTriangleIndices=Ae(Oe(s));let r=0;for(let n=0;n<i.length;n+=3)r+=ys(e[i[n]],e[i[n+1]],e[i[n+2]],Be.WGS84);return r}_selectFittingMode(e,s,i,r){const n=s.map(p=>Math.abs(gs(e,p))).reduce((p,g)=>Math.max(p,g),0);us(s,this._tempSphere);const o=n/(2*this._tempSphere.radius),h=o<r.maxRelativeErrorCoplanar,d=o<r.maxRelativeErrorAlmostCoplanar;let u="horizontal";return h?u="oblique":d&&(u=Math.abs($(i,e))>Math.cos(ht(r.verticalAngleThreshold))?"horizontal":"vertical"),u}_updateCursorSegmentLength(e,s){const i=e.lastPoint;!e.isValidPolygon&&_(i)&&_(s)?(this.geodesicCursorSegmentLength=U(fs(i,s),"meters"),this.cursorSegmentLength=U(this.unitNormalizer.normalizeDistance(_s(i,s,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(e,s){if(s===ae.Auto){this.actualMeasurementMode="euclidean";let i=0;this.geodesicPathLength!=null&&(i+=this.geodesicPathLength.value),!e.isValidPolygon&&_(this.geodesicCursorSegmentLength)&&(i+=this.geodesicCursorSegmentLength.value),i>Ps&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=s===ae.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=s}}function bs(t,e){e.hasZ||(e.z=Ee(Ot(t,e,"ground"),0))}const Ps=1e5;let O=class extends me{constructor(t){super(t)}initialize(){const t=this.view.spatialReference,e=de(t),s=e===ot?at:e,i=!t||We(t,s)?s:t,r=new Xe(i);this._measurementDataManager=new Cs(this.view,r),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),N(()=>this.analysisViewData.cursorPoint,()=>this._update(),_e),N(()=>this.analysisViewData.mode,()=>this._update(),_e)]),this._update()}_update(t=!1){const{analysisViewData:e,view:s}=this,i={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(e.path,e.cursorPoint,s,e.validMeasurement,i,e.mode,t)&&(e.measurementData=this._measurementDataManager.getData())}};a([l({constructOnly:!0})],O.prototype,"view",void 0),a([l({constructOnly:!0})],O.prototype,"analysis",void 0),a([l({constructOnly:!0})],O.prototype,"analysisViewData",void 0),O=a([re("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],O);const He="esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper",As=Wt.getLogger(He);let M=class extends jt.EventedAccessor{constructor(t={}){super(t),this._handles=new Ie,this._version=0,this._internalGeometryChange=!1,this._extent=Me()}destroy(){this._handles=v(this._handles)}set areaMeasurement(t){this._set("areaMeasurement",t),_(t)&&_(this.view)&&this._initialize(t,this.view)}set view(t){this._set("view",t),_(t)&&_(this.areaMeasurement)&&this._initialize(this.areaMeasurement,t)}get constructed(){return _(this.areaMeasurement)&&_(this.view)}get version(){return this._version}get isValidPolygon(){return this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const t=Me(this._extent);return this.forEachVertex(e=>{Ft(t,e.pos)}),t}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(t,e){this._handles.removeAll(),this._handles.add(N(()=>t.geometry,()=>{this._updateEditGeometryFromModelGeometry(t,e)},he)),this._makeDirty(!0)}_makeDirty(t=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),t&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(t,e){if(this._version++,this._internalGeometryChange)return;this._handles.remove("EditGeometry");let s=t.geometry;if(_(s)){const i=nt(s,e.spatialReference);q(i)&&tt(t,s.spatialReference,As),s=i}_(s)?this._editGeometryOperations=$e.fromGeometry(s,e.state.viewingMode):this._editGeometryOperations=new $e(new qt("polygon",Nt(!0,!1,e.spatialReference))),this._makeDirty(!0),this.emit("change"),this._handles.add(this._editGeometry.on("change",i=>{this._makeDirty(i.addedVertices!=null||i.removedVertices!=null),this._internalGeometryChange=!0,t.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const t=[];return this.forEachVertex(e=>{t.push(e)}),t}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const t=this._editGeometry.components[0].getLastVertex();if(_(t))return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}getVertex(t){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const e=this._editGeometry.components[0].vertices[0];let s=e;do{if(s.index===t)return s;s=s.rightEdge.rightVertex}while(s!==e&&s!=null);return null}getVertexPositionAsPoint(t){return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}getVertexPositionAsPointFromIndex(t){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(t).pos)}forEachVertex(t){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(t)}forEachVertexPosition(t){const e=this._editGeometry.coordinateHelper;this.forEachVertex((s,i)=>{e.vectorToPoint(s.pos,Te),t(Te,i)})}clear(){_(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(t){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const s=W(this.view);this._editGeometry.components.push(new kt(s.spatialReference,s.state.viewingMode))}const e=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),e}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const t=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),t}ensureContains(t,e=""){let s=!1;if(this._editGeometry.components.forEach(i=>{i.iterateVertices(r=>{r===t&&(s=!0)})}),!s)throw new Error(`vertex doesnt exist ${e}`);return s}setVertexPosition(t,e){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(t,this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}equals(t){if(this.numVertices!==t.numVertices)return!1;let e=!0;return this.forEachVertexPosition((s,i)=>{const r=t.getVertexPositionAsPointFromIndex(i);s.equals(r)||(e=!1)}),!!e}};a([l({value:null})],M.prototype,"areaMeasurement",null),a([l({value:null})],M.prototype,"view",null),a([l()],M.prototype,"isValidPolygon",null),a([l()],M.prototype,"extent",null),a([l()],M.prototype,"spatialReference",null),a([l()],M.prototype,"numVertices",null),M=a([re(He)],M);const Te=new ft;function Ms(t){const e=new ls;e.extensions.add("GL_OES_standard_derivatives");const{vertex:s,fragment:i}=e;return as(s,t),e.attributes.add(T.POSITION,"vec3"),e.attributes.add(T.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.hasMultipassTerrain&&e.varyings.add("depth","float"),s.code.add(ze`
    void main(void) {
      vUV = uv0;
      ${t.hasMultipassTerrain?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(os,t),i.uniforms.add(new hs("size",r=>r.size)),i.uniforms.add(new xe("color1",r=>r.color1)),i.uniforms.add(new xe("color2",r=>r.color2)),i.include(ns),i.code.add(ze`
    void main() {
      ${t.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${t.transparencyPassType===k.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),e}const $s=Object.freeze(Object.defineProperty({__proto__:null,build:Ms},Symbol.toStringTag,{value:"Module"}));let Ke=class Je extends es{initializeProgram(e){return new ts(e.rctx,Je.shader.get().build(this.configuration),Jt)}_setPipelineState(e){const s=this.configuration,i=e===k.NONE,r=e===k.FrontFace;return ss({blending:s.transparent?i?Rs:Pt(e):null,depthTest:{func:At(e)},depthWrite:i?s.writeDepth?is:null:Mt(e),colorWrite:rs,polygonOffset:i||r?s.polygonOffset?Vs:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}};Ke.shader=new Qt($s,()=>Zt(()=>import("./CheckerBoard.glsl-189aeb4e.js"),["./CheckerBoard.glsl-189aeb4e.js","./ShaderBuilder-be7ca791.js","./typedArrayUtil-bf9f210a.js","./Error-5cdd6e0a.js","./string-53224faa.js","./vec2-848c6cf0.js","./common-d0b63c2d.js","./vec2f64-70cfd09e.js","./Texture2DPassUniform-268e8d2d.js","./View.glsl-879c1eaf.js","./mat4-f0dc8788.js","./vec3-8818fe1c.js","./mat4f32-60a2394b.js","./TransparencyPassType-c3841b0a.js","./VertexAttribute-15d1866a.js","./jsonMap-ffa742d3.js","./ArrayPool-b51874dd.js","./nextTick-3ee5a785.js","./promiseUtils-5940888c.js","./analysisThemeUtils-a5bfd117.js","./Segment-0dc6a9a8.js","./Extent-22afa84a.js","./Ellipsoid-89682c5e.js","./Portal-8dfa7a94.js","./preload-helper-41c905a7.js","./request-09e7d9b2.js","./Loadable-40ecd3b9.js","./Promise-755e47e5.js","./locale-fe7cc1d0.js","./PortalGroup-00fb77a4.js","./PortalUser-9579f611.js","./SceneView-7ac05f56.js","./Clonable-7fa7ad97.js","./Cyclical-47bda305.js","./mathUtils-ae09f98b.js","./vec4-c7a19f0d.js","./geometry-7d866d3f.js","./Polyline-82cb63bc.js","./typeUtils-1714017f.js","./Graphic-5dcfa25e.js","./PopupTemplate-81dc9b83.js","./Collection-74ae958a.js","./Evented-686173eb.js","./SimpleObservable-bd2c3ae8.js","./fieldUtils-d430f46c.js","./arcadeOnDemand-dd48afd7.js","./enumeration-925aa0f6.js","./number-036ac4ef.js","./Identifiable-e4f9b04c.js","./symbols-5f42cb0e.js","./CIMSymbol-8f55d4ab.js","./Color-7b46c33a.js","./colorUtils-639f4d25.js","./screenUtils-410d12c0.js","./opacityUtils-d4a4b602.js","./symbolLayerUtils3D-5cf2dcce.js","./aaBoundingBox-fb003858.js","./aaBoundingRect-2fb32e32.js","./persistableUrlUtils-3635dccc.js","./Symbol3DAnchorPosition2D-e9d8a8f4.js","./collectionUtils-423a192d.js","./jsonUtils-36bf3d33.js","./widget-01c21b51.js","./intl-87d72dbe.js","./messages-1516d146.js","./assets-94d592bf.js","./reactiveUtils-53e5756b.js","./uuid-73213768.js","./workers-c8fc8d43.js","./Connection-3d9fb42e.js","./GraphicsLayer-cbd6e467.js","./HandleOwner-6217a02e.js","./Layer-524734fa.js","./BlendLayer-793ff14a.js","./ScaleRangeLayer-d1b04b80.js","./ElevationInfo-005ddd87.js","./lengthUtils-3c9047c4.js","./HeightModelInfo-73f516f9.js","./projection-4ac247db.js","./zscale-baa108ea.js","./sphere-a48b65b1.js","./vec4f64-6d0e93be.js","./byteSizeEstimations-f0cab514.js","./mat3f64-50f3b9f6.js","./mat4f64-abdda1bb.js","./quatf64-f8f1c132.js","./lineSegment-4eb8b6fa.js","./plane-01584357.js","./spatialReferenceEllipsoidUtils-88aa82c4.js","./scaleUtils-a3b834c2.js","./layerUtils-eef15b39.js","./AttachmentInfo-23249301.js","./AttachmentQuery-f1085685.js","./ColorStop-29c89bbb.js","./utils-6a5cc1bf.js","./asyncUtils-24bd37b2.js","./ItemCache-e927309e.js","./MemCache-b4d68123.js","./jsonUtils-9b4d797d.js","./UniqueValueRenderer-80c8e628.js","./diffUtils-1bae97a1.js","./colorRamps-18bbdf60.js","./sizeVariableUtils-d4870b0d.js","./visualVariableUtils-61985981.js","./compilerUtils-7bf6df9e.js","./jsonUtils-27937179.js","./styleUtils-689841ac.js","./DictionaryLoader-1c3435ac.js","./LRUCache-86d9ad15.js","./deprecate-ba25fc78.js","./heatmapUtils-8ee685fd.js","./Query-b0193ce7.js","./TimeExtent-64e16588.js","./Field-945b2973.js","./fieldType-24ac97df.js","./executeQueryJSON-044ac84b.js","./normalizeUtils-353ec0fc.js","./normalizeUtilsCommon-d8ea404e.js","./query-b4dff312.js","./pbfQueryUtils-481b10bc.js","./pbf-845dcafd.js","./OptimizedFeature-3e582950.js","./OptimizedFeatureSet-1d1ac4b9.js","./queryZScale-f6e44ca7.js","./FeatureSet-b4fbf079.js","./featureConversionUtils-aead6959.js","./RelationshipQuery-765b2184.js","./TopFeaturesQuery-d2b31d08.js","./FeatureLayer-e767d294.js","./MultiOriginJSONSupport-06f8f24a.js","./serviceCapabilitiesUtils-22f436bd.js","./arcgisLayerUrl-1b8d6c52.js","./FeatureLayerBase-633118ca.js","./OperationalLayer-db187f46.js","./TimeReference-adaa7961.js","./datetime-eed49b9b.js","./editsZScale-9d0832b8.js","./APIKeyMixin-ef4ccb38.js","./ArcGISService-24587a68.js","./CustomParametersMixin-2798ec18.js","./EditBusLayer-b1010019.js","./FeatureReductionLayer-5ef01ce2.js","./labelingInfo-e65ecbf4.js","./labelUtils-b68da70f.js","./defaultsJSON-59981e75.js","./OrderedLayer-045186a6.js","./PortalLayer-d69e402d.js","./PortalItem-4d7e1038.js","./portalItemUtils-0655aa33.js","./RefreshableLayer-12bc7ba2.js","./TemporalLayer-f231f22a.js","./FeatureTemplate-5a472038.js","./FeatureType-017f886c.js","./fieldProperties-7a0757a8.js","./FieldsIndex-113320d3.js","./versionUtils-9a1e7983.js","./styleUtils-5c617777.js","./popupUtils-b8625101.js","./callExpressionWithFeature-eb5719d8.js","./quantizationUtils-16db4e0b.js","./Scheduler-61737382.js","./ElevationSamplerData-3fc2a90f.js","./TileInfo-9973cd47.js","./Basemap-5a7c72ee.js","./loadAll-8ca49458.js","./writeUtils-b7104d82.js","./CollectionFlattener-80d223f1.js","./TablesMixin-8f62a14c.js","./ViewingMode-5d7d590b.js","./PhysicallyBasedRendering.glsl-edd81ba9.js","./FloatPassUniform-0426669b.js","./Float4PassUniform-9354414b.js","./RgbaFloatEncoding.glsl-67199794.js","./vec3f32-01c06d8d.js","./Texture2DDrawUniform-e4341b84.js","./basicInterfaces-7449a8bf.js","./PiUtils.glsl-49462ceb.js","./ReadLinearDepth.glsl-0e6f5c47.js","./WaterSurface.glsl-e13d44e2.js","./ForwardLinearDepth.glsl-52bf5bdc.js","./Matrix3PassUniform-df6e2166.js","./Slice.glsl-cd30f0ea.js","./Transform.glsl-052069d0.js","./OutputHighlight.glsl-ca02d1ee.js","./MultipassTerrainTest.glsl-8b279fcd.js","./NormalUtils.glsl-84d184a7.js","./AlphaCutoff-96178e0d.js","./EvaluateSceneLighting.glsl-14c608ff.js","./VisualVariablePassParameters-f892560d.js","./enums-fc527c7c.js","./VertexElementDescriptor-2925c6af.js","./Texture-d2fa6cd8.js","./context-util-34d303b7.js","./Util-513876a8.js","./SSAOBlur.glsl-c56632c0.js","./ScreenSpacePass.glsl-44cc0c5e.js","./SSAO.glsl-2c6533cd.js","./ShaderTechniqueConfiguration-0fa0f78c.js","./mat3-4fd89d48.js","./HUD.glsl-73b068b4.js","./VerticalOffset.glsl-109e8746.js","./Octree-813f29c9.js","./objectResourceUtils-3685cb27.js","./devEnvironmentUtils-5002a058.js","./BufferView-b402c7a7.js","./vec33-ca555933.js","./DefaultMaterial_COLOR_GAMMA-8ec4380b.js","./types-e1c0a5bf.js","./Version-621cc6b7.js","./quat-77a0169c.js","./resourceUtils-527631ac.js","./Indices-f9b34f39.js","./DefaultMaterial.glsl-58ca0075.js","./MixExternalColor.glsl-f5c601ed.js","./symbolColorUtils-1c63720c.js","./ObjectAndLayerIdColor.glsl-66083f64.js","./OutputDepth.glsl-17bf0574.js","./VisualVariables.glsl-bb97d5ba.js","./DiscardOrAdjustAlphaBlend.glsl-27f02ebd.js","./VertexColor.glsl-2f905a78.js","./Normals.glsl-6a1bc6fb.js","./vec2f32-eaf29605.js","./Texture-ae652f15.js","./TextureOnly.glsl-469cc321.js","./Attribute-f72d3f37.js","./InterleavedLayout-07cc6753.js","./DefaultTechniqueConfiguration-b54ae0b1.js","./RealisticTree.glsl-29f7cbd7.js","./edgeProcessing-ac701714.js","./deduplicate-a70aec6f.js","./MeshComponent-777de3ff.js","./earcut-61f7b102.js","./projection-03824933.js","./HUDMaterial.glsl-82200888.js","./sdfPrimitives-3ceeab79.js","./floatRGBA-1f66d0a4.js","./dehydratedFeatures-efdbcd90.js","./labelFormatUtils-f90ee62f.js","./orientedBoundingBox-6188c4d9.js","./quatf32-51a323b8.js","./LineCallout.glsl-76cd336e.js","./SnappingCandidate-970faec6.js","./MarkerSizing.glsl-950a18f6.js","./RibbonLine.glsl-8fe4662b.js","./LineStipple.glsl-4eef2aea.js","./LineMarker.glsl-2c017de2.js","./NativeLine.glsl-9893bc56.js","./Path.glsl-2eb74a31.js","./ColorMaterial.glsl-1d45c81e.js","./Pattern.glsl-698f2083.js","./LercDecoder-f1486af7.js","./enums-fb086c25.js","./config-f7904f35.js","./TileKey-4d1284e4.js","./workerHelper-2d7b0d57.js","./capabilities-caaa1278.js","./SceneView-292eb7eb.css","./LineVisualElement-4382615e.js","./elevationInfoUtils-d3b9d588.js","./geometryEngine-ddae1820.js","./geometryEngineBase-e1a33b0a.js","./hydrated-013e69c7.js","./EditGeometryOperations-0df36f69.js"],import.meta.url));const Vs={factor:0,units:-25},Rs=Yt(Q.SRC_ALPHA,Q.ONE,Q.ONE_MINUS_SRC_ALPHA,Q.ONE_MINUS_SRC_ALPHA);class G extends ds{constructor(){super(...arguments),this.transparencyPassType=k.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}a([z({count:k.COUNT})],G.prototype,"transparencyPassType",void 0),a([z()],G.prototype,"transparent",void 0),a([z()],G.prototype,"writeDepth",void 0),a([z()],G.prototype,"polygonOffset",void 0),a([z()],G.prototype,"hasMultipassTerrain",void 0),a([z()],G.prototype,"cullAboveGround",void 0);class Gs extends Tt{constructor(e){super(e,new xs),this._configuration=new G}dispose(){}getConfiguration(e,s){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.hasMultipassTerrain=s.multipassTerrain.enabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration}requiresSlot(e,s){return s===De.Color||s===De.Alpha?e===(this.parameters.transparent?this.parameters.writeDepth?Z.TRANSPARENT_MATERIAL:Z.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:Z.OPAQUE_MATERIAL)||e===Z.DRAPED_MATERIAL:!1}createGLMaterial(e){return new Ds(e)}createBufferWriter(){return new $t(It)}}let Ds=class extends Vt{beginSlot(e){return this.ensureTechnique(Ke,e)}};class xs extends Xt{constructor(){super(...arguments),this.size=Fe(1,1),this.color1=ie(.75,.75,.75,1),this.color2=ie(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class zs extends st{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=D.OccludeAndTransparent,this._geometry=null,this._size=Fe(1,1),this._color1=ie(1,.5,0,.5),this._color2=ie(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get size(){return this._size}set size(e){pt(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){Ve(e,this._color1)||(Re(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){Ve(e,this._color2)||(Re(this._color2,e),this._updateMaterial())}_updateMaterial(){_(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Gs({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){_(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if(q(this._geometry)||q(this._checkerBoardMaterial))return;const s=Os;Bt(s,this.transform);const i=this._geometry,r=[],n=c();i.position.forEach(d=>{se(n,d,s),r.push(n[0],n[1],n[2])});const o=[];i.uv.forEach(d=>{o.push(d[0],d[1])});const h=new Rt(this._checkerBoardMaterial,[[T.POSITION,new Ge(r,3,!0)],[T.UV0,new Ge(o,2,!0)]],[[T.POSITION,i.triangleIndices],[T.UV0,i.triangleIndices]]);e.addGeometry(h)}_geometryChanged(){this.recreateGeometry()}}const Os=c();let w=class extends me{get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(t){super(t),this._handles=new Ie,this._params={pathLineColor:j.toUnitRGBA(J()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:j.toUnitRGBA(J()),perimeterLineWidth:2,projectionLineColor:j.toUnitRGBA(J()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:j.toUnitRGBA(J(.5)),areaColor2:j.toUnitRGBA(Ze(.5)),labelDistance:25},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=c(),this._originTransform=Kt(),this._cursorPositionRenderSpace=c(),this.messages=null,this.viewData=Ts,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_params:e,view:s}=this;this._path=new E({view:s,attached:!0,width:e.pathLineWidth,color:e.pathLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._intersectedPath=new E({view:s,attached:!0,width:e.pathLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._perimeter=new E({view:s,attached:!0,width:e.perimeterLineWidth,color:e.perimeterLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._intersectedPerimeter=new E({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._projectionLines=new E({view:s,attached:!0,width:e.projectionLineWidth,color:e.projectionLineColor,stipplePattern:Et(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._measurementArea=new zs({view:s,attached:!0,color1:e.areaColor1,color2:e.areaColor2});const i={attached:!0,backgroundColor:Qe(.6),textColor:Ye(),view:s};this._areaLabel=new X({...i,fontSize:I.Large}),this._pathLengthLabel=new X({...i,fontSize:I.Small}),this._cursorSegmentLengthLabel=new X({...i,fontSize:I.Small}),this._perimeterLengthLabel=new X({...i,fontSize:I.Small}),this._handles.add([N(()=>[t.mode,this.visible,t.unit,t.measurementData,t.cursorPoint],()=>this._update(),he),N(()=>{var r;return(r=s.state)==null?void 0:r.camera},()=>this._updateLabels(),he),cs(()=>this._updateMessageBundle())]),this._updateMessageBundle()}destroy(){this._measurementArea=v(this._measurementArea),this._path=v(this._path),this._intersectedPath=v(this._intersectedPath),this._perimeter=v(this._perimeter),this._intersectedPerimeter=v(this._intersectedPerimeter),this._areaLabel=v(this._areaLabel),this._pathLengthLabel=v(this._pathLengthLabel),this._cursorSegmentLengthLabel=v(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=v(this._perimeterLengthLabel),this._projectionLines=v(this._projectionLines),this._handles=v(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;q(t)||(this._updateViewData(t,e.path,e.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,s){const i=e.isValidPolygon,r=t.actualMeasurementMode==="geodesic",n=r?t.geodesicArea:t.area;let o=1;if(n){const d=this._toPreferredAreaUnit(n,this.analysisViewData.unit);o=lt(Math.sqrt(d.value)/Math.sqrt(300)),o*=Math.sqrt(Lt(1,d.unit,"square-meters")),o/=t.unitNormalizer.normalizeDistance(1)}const h={validMeasurement:i,path:e,pathVersion:e.version,cursorPoint:s,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:i?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set("viewData",h)}_updateOrigin(){const t=this.viewData;oe(t.positionsRenderCoords,this._origin),Ht(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=e.path,i=this.view.renderCoordsHelper.spatialReference,r=e.mode,n=[],o=[],h=[],d=e.validMeasurement?s.numVertices:s.numVertices-1;for(let u=0;u<d;++u){const p=e[t][u],g=e[t][(u+1)%s.numVertices];let m=null;switch(r){case"euclidean":m=new ce(p,g);break;case"geodesic":m=new ve(p,g,i)}e.intersectingSegments.has(u)?h.push(m):o.push(m),n.push(m)}return{all:n,nonIntersecting:o,intersecting:h}}_updatePathSegments(){const{view:{renderCoordsHelper:t},viewData:e,visible:s}=this,i=this._createSegments("positionsRenderCoords"),{cursorPoint:r,mode:n,path:o}=e,h=!o.isValidPolygon,d=t.spatialReference;if(this._cursorSegment=null,o.numVertices>0&&h&&_(r)&&t.toRenderCoords(r,this._cursorPositionRenderSpace)){const u=e.positionsRenderCoords[o.numVertices-1],p=this._cursorPositionRenderSpace;let g=null;switch(n){case"euclidean":g=new ce(u,p);break;case"geodesic":g=new ve(u,p,d)}i.nonIntersecting.push(g),this._cursorSegment=g}this._path.setGeometryFromSegments(i.nonIntersecting,this._origin),this._path.visible=s,this._intersectedPath.setGeometryFromSegments(i.intersecting,this._origin),this._intersectedPath.visible=s,this._pathSegments=i.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.path,i=t.mode;if(s.numVertices>0&&t.validMeasurement&&i==="euclidean"){const r=[];for(let n=0;n<s.numVertices;++n){const o=c();se(o,t.positionsRenderCoords[n],this._origin);const h=c();se(h,t.positionsFittedRenderCoords[n],this._origin),r.push([o,h])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:s,path:i}=t;if(!i)return;const r=!i.isValidPolygon,n=this.visible,o=this._formatAreaLabel(this.messages,s==="geodesic"?e.geodesicArea:e.area,this.analysisViewData.unit);_(o)?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=o,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&n):this._areaLabel.visible=!1,this._set("areaLabel",W(o));const h=this._formatLengthLabel(this.messages,s==="geodesic"?e.geodesicPathLength:e.pathLength,this.analysisViewData.unit);if(_(h)&&t.pathLengthLabelSegmentIndex>=0&&t.pathLengthLabelSegmentIndex<this._pathSegments.length){const m=this._pathSegments[t.pathLengthLabelSegmentIndex],y=_(this._cursorSegment)?this._cursorSegment:Is;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:m,right:y},this._pathLengthLabel.text=h,this._pathLengthLabel.visible=r&&i.numVertices>0&&n}else this._pathLengthLabel.visible=!1;const d=s==="geodesic"?t.measurementData.geodesicCursorSegmentLength:t.measurementData.cursorSegmentLength;if(_(d)){const m=this._formatLengthLabel(this.messages,d,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=_(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=W(m),this._cursorSegmentLengthLabel.visible=r&&d.value!==0&&n}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const u=t.mode==="geodesic",p=u?e.geodesicPathLength:e.perimeterLength,g=this._formatLengthLabel(this.messages,p,this.analysisViewData.unit);if(this._set("perimeterLengthLabel",W(g)),t.validMeasurement&&t.intersectingSegments.size===0){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=W(g),this._perimeterLengthLabel.visible=!0;let m=!0;for(let y=0;y<t.path.numVertices;++y){const b=(t.perimeterLengthLabelSegmentIndex+y)%t.path.numVertices,P=u?this._pathSegments[b]:this._perimeterSegments[b];if(m=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:P,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;m=!1}this._perimeterLengthLabel.visible=m&&n}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return dt(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return vt(t.value,t.unit);case"imperial":return yt(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const s=this._deriveLengthUnitFromAreaUnit(e);switch(s){case"metric":return wt(t.value,t.unit);case"imperial":return St(t.value,t.unit);default:return s}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,s){return t&&e&&Se(t,e,this._preferredAreaUnit(e,s))}_formatLengthLabel(t,e,s){return t&&e&&Se(t,e,this._preferredLengthUnit(e,s))}_updateMessageBundle(){this.loadingMessages=!0,ps("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var I;a([l()],w.prototype,"view",void 0),a([l()],w.prototype,"messages",void 0),a([l()],w.prototype,"analysis",void 0),a([l()],w.prototype,"viewData",void 0),a([l()],w.prototype,"analysisViewData",void 0),a([l({readOnly:!0})],w.prototype,"areaLabel",void 0),a([l({readOnly:!0})],w.prototype,"perimeterLengthLabel",void 0),a([l()],w.prototype,"loadingMessages",void 0),a([l()],w.prototype,"visible",null),w=a([re("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],w),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(I||(I={}));const Ts={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Is=new ce(c(),c());let f=class extends it(me){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=ae.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new M({view:e,areaMeasurement:t}),this.analysisVisualization=new w({view:e,analysis:t,analysisViewData:this}),this.analysisController=new O({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=v(this.analysisController),this.analysisVisualization=v(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return q(t)?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return Ee(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};a([l({readOnly:!0})],f.prototype,"type",void 0),a([l({constructOnly:!0,nonNullable:!0})],f.prototype,"analysis",void 0),a([l()],f.prototype,"updating",null),a([l()],f.prototype,"analysisVisualization",void 0),a([l()],f.prototype,"analysisController",void 0),a([l()],f.prototype,"result",null),a([l()],f.prototype,"measurementData",void 0),a([l()],f.prototype,"viewData",null),a([l()],f.prototype,"validMeasurement",null),a([l()],f.prototype,"path",void 0),a([l()],f.prototype,"lastDraggedVertex",void 0),a([l()],f.prototype,"cursorPoint",void 0),a([l()],f.prototype,"mode",void 0),a([l()],f.prototype,"unit",null),a([l(et)],f.prototype,"_defaultUnit",void 0),f=a([re("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],f);const Es=f,Ti=Object.freeze(Object.defineProperty({__proto__:null,default:Es},Symbol.toStringTag,{value:"Module"}));export{Ti as A,Ms as n};
