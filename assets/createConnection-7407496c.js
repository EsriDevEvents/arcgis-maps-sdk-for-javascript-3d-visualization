import{_ as N}from"./preload-helper-41c905a7.js";import{e as f,y as _,a as b}from"./jsonMap-ffa742d3.js";import"./geometry-7d866d3f.js";import{E as F,U as O}from"./request-09e7d9b2.js";import{a as c,s as a}from"./Error-5cdd6e0a.js";import{r as h,t as g,l as C,x as E}from"./typedArrayUtil-bf9f210a.js";import{U as P,D as R}from"./promiseUtils-5940888c.js";import"./ArrayPool-b51874dd.js";import"./string-53224faa.js";import{o as x}from"./zscale-baa108ea.js";import{n as M}from"./Evented-686173eb.js";import{c as v}from"./query-b4dff312.js";import{x as W}from"./Query-b0193ce7.js";import{v as T}from"./jsonUtils-36bf3d33.js";import{f as q}from"./Extent-22afa84a.js";import"./nextTick-3ee5a785.js";import"./Polyline-82cb63bc.js";import"./typeUtils-1714017f.js";import"./normalizeUtils-353ec0fc.js";import"./normalizeUtilsCommon-d8ea404e.js";import"./pbfQueryUtils-481b10bc.js";import"./pbf-845dcafd.js";import"./OptimizedFeature-3e582950.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-f6e44ca7.js";import"./TimeExtent-64e16588.js";import"./enumeration-925aa0f6.js";import"./Field-945b2973.js";import"./fieldType-24ac97df.js";import"./Clonable-7fa7ad97.js";import"./Ellipsoid-89682c5e.js";let S=class extends M.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new c("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};f([_({readOnly:!0})],S.prototype,"connectionError",null),S=f([b("esri.layers.support.StreamConnection")],S);const L=S;var p;(function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"})(p||(p={}));let m=class extends L{constructor(e){super(),this._outstandingMessages=[],this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._config=e,this._featureZScaler=x(t,s,r),this._open()}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),h(this._websocket)&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(g(this._websocket))return"disconnected";switch(this._websocket.readyState){case p.CONNECTING:case p.OPEN:return"connected";case p.CLOSING:case p.CLOSED:return"disconnected"}}sendMessageToSocket(e){g(this._websocket)?this._outstandingMessages.push(e):this._websocket.send(JSON.stringify(e))}sendMessageToClient(e){this._onMessage(e)}updateCustomParameters(e){this._config.customParameters=e,h(this._websocket)&&this._websocket.close()}async _tryCreateWebSocket(e=this._config.source.path,t=1e3,r=0){try{if(this.destroyed)return;const s=F(e,this._config.customParameters??{});this._websocket=await this._createWebSocket(s),this.notifyChange("connectionStatus")}catch(s){const o=t/1e3;return this._config.maxReconnectionAttempts&&r>=this._config.maxReconnectionAttempts?(a.getLogger(this.declaredClass).error(new c("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(a.getLogger(this.declaredClass).error(new c("websocket-connection",`Failed to connect. Attempting to reconnect in ${o}s`,s)),await P(t),this._tryCreateWebSocket(e,Math.min(1.5*t,1e3*this._config.maxReconnectionInterval),r+1))}}_setWebSocketJSONParseHandler(e){e.onmessage=t=>{try{const r=JSON.parse(t.data);this._onMessage(r)}catch(r){return void a.getLogger(this.declaredClass).error(new c("websocket-connection","Failed to parse message, invalid JSON",{error:r}))}}}_createWebSocket(e){return new Promise((t,r)=>{const s=new WebSocket(e);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=o=>this._onClose(o),s.onerror=o=>this._onError(o),this._setWebSocketJSONParseHandler(s),t(s)},s.onclose=o=>{s.onopen=s.onclose=null,r(o)}})}async _handshake(e=1e4){const t=this._websocket;if(g(t))return;const r=R(),s=t.onmessage,{filter:o,outFields:n,spatialReference:l}=this._config;return r.timeout(e),t.onmessage=d=>{var i;let u=null;try{u=JSON.parse(d.data)}catch{}u&&typeof u=="object"||(a.getLogger(this.declaredClass).error(new c("websocket-connection","Protocol violation. Handshake failed - malformed message",d.data)),r.reject(),this.destroy()),((i=u.spatialReference)==null?void 0:i.wkid)!==(l==null?void 0:l.wkid)&&(a.getLogger(this.declaredClass).error(new c("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${l.wkid}`,d.data)),r.reject(),this.destroy()),u.format!=="json"&&(a.getLogger(this.declaredClass).error(new c("websocket-connection","Protocol violation. Handshake failed - format is not set",d.data)),r.reject(),this.destroy()),o&&u.filter!==o&&a.getLogger(this.declaredClass).error(new c("websocket-connection","Tried to set filter, but server doesn't support it")),n&&u.outFields!==n&&a.getLogger(this.declaredClass).error(new c("websocket-connection","Tried to set outFields, but server doesn't support it")),t.onmessage=s;for(const w of this._outstandingMessages)t.send(JSON.stringify(w));this._outstandingMessages=[],r.resolve()},t.send(JSON.stringify({filter:o,outFields:n,format:"json",spatialReference:{wkid:l.wkid}})),r.promise}_onMessage(e){if(this.onMessage(e),"type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)h(this._featureZScaler)&&this._featureZScaler(t.geometry),this.onFeature(t)}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),a.getLogger(this.declaredClass).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),e.code!==1e3&&a.getLogger(this.declaredClass).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}};f([_()],m.prototype,"connectionStatus",null),f([_()],m.prototype,"errorString",void 0),m=f([b("esri.layers.graphics.sources.connections.WebSocketConnection")],m);const $=1e4,j={maxQueryDepth:5,maxRecordCountFactor:3};let k=class extends m{constructor(e){super({...j,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||a.getLogger(this.declaredClass).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:s}=this._config;this.destroyed||this._setFilter(r,s)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),h(this._featureZScaler)&&this._featureZScaler(t.geometry)}catch(r){return void a.getLogger(this.declaredClass).error(new c("geoevent-connection","Failed to parse message",r))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=O(e.path,{query:t,responseType:"json"}),s=(await r).data;return this._serviceDefinition=s,s}_fetchWebSocketUrl(e,t){const r=e[0],{urls:s,token:o}=r,n=this._inferWebSocketBaseUrl(s);return F(`${n}/subscribe`,{outSR:""+t.wkid,token:o})}_inferWebSocketBaseUrl(e){if(e.length===1)return e[0];for(const t of e)if(t.includes("wss"))return t;return a.getLogger(this.declaredClass).error(new c("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(g(r)||g(e)&&g(t))return;const s=JSON.stringify({filter:this._serializeFilter(e,t)});let o=!1;const n=R(),l=()=>{o||(this.destroyed||this._websocket!==r||a.getLogger(this.declaredClass).error(new c("geoevent-connection","Server timed out when setting filter")),n.reject())},d=u=>{const i=JSON.parse(u.data);i.filter&&(i.error&&(a.getLogger(this.declaredClass).error(new c("geoevent-connection","Failed to set service filter",i.error)),this._set("errorString",`Could not set service filter - ${i.error}`),n.reject(i.error)),this._setWebSocketJSONParseHandler(r),o=!0,n.resolve())};return r.onmessage=d,r.send(s),setTimeout(l,$),n.promise}_serializeFilter(e,t){const r={};if(g(e)&&g(t))return r;if(h(e)&&e.geometry)try{const s=T(e.geometry);if(s.type!=="extent")throw new c(`Expected extent but found type ${s.type}`);r.geometry=JSON.stringify(s.shiftCentralMeridian())}catch(s){a.getLogger(this.declaredClass).error(new c("geoevent-connection","Encountered an error when setting connection geometryDefinition",s))}return h(e)&&e.where&&e.where!=="1 = 1"&&e.where!=="1=1"&&(r.where=e.where),h(t)&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],s=this._relatedFeatures.get(r);if(!s)return a.getLogger(this.declaredClass).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:o,geometry:n}=s;for(const l in o)e.attributes[l]=o[l];return n&&(e.geometry=n),e.geometry||e.centroid||a.getLogger(this.declaredClass).error(new c("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),s=this._queryArchive(t);await r;const o=await s;if(!o)return;for(const n of o.features)this.onFeature(this._enrich(n))}catch(e){a.getLogger(this.declaredClass).error(new c("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new(await N(()=>import("./FeatureLayer-e767d294.js"),["./FeatureLayer-e767d294.js","./preload-helper-41c905a7.js","./jsonMap-ffa742d3.js","./typedArrayUtil-bf9f210a.js","./string-53224faa.js","./Error-5cdd6e0a.js","./ArrayPool-b51874dd.js","./nextTick-3ee5a785.js","./promiseUtils-5940888c.js","./PopupTemplate-81dc9b83.js","./Clonable-7fa7ad97.js","./Collection-74ae958a.js","./Evented-686173eb.js","./SimpleObservable-bd2c3ae8.js","./Extent-22afa84a.js","./Ellipsoid-89682c5e.js","./fieldUtils-d430f46c.js","./arcadeOnDemand-dd48afd7.js","./geometry-7d866d3f.js","./Polyline-82cb63bc.js","./typeUtils-1714017f.js","./enumeration-925aa0f6.js","./number-036ac4ef.js","./locale-fe7cc1d0.js","./Identifiable-e4f9b04c.js","./UniqueValueRenderer-80c8e628.js","./symbols-5f42cb0e.js","./CIMSymbol-8f55d4ab.js","./Color-7b46c33a.js","./colorUtils-639f4d25.js","./mathUtils-ae09f98b.js","./vec3-8818fe1c.js","./common-d0b63c2d.js","./vec4-c7a19f0d.js","./screenUtils-410d12c0.js","./opacityUtils-d4a4b602.js","./symbolLayerUtils3D-5cf2dcce.js","./aaBoundingBox-fb003858.js","./aaBoundingRect-2fb32e32.js","./request-09e7d9b2.js","./persistableUrlUtils-3635dccc.js","./Symbol3DAnchorPosition2D-e9d8a8f4.js","./collectionUtils-423a192d.js","./Portal-8dfa7a94.js","./Loadable-40ecd3b9.js","./Promise-755e47e5.js","./PortalGroup-00fb77a4.js","./PortalUser-9579f611.js","./ColorStop-29c89bbb.js","./reactiveUtils-53e5756b.js","./diffUtils-1bae97a1.js","./colorRamps-18bbdf60.js","./sizeVariableUtils-d4870b0d.js","./visualVariableUtils-61985981.js","./Graphic-5dcfa25e.js","./jsonUtils-36bf3d33.js","./compilerUtils-7bf6df9e.js","./lengthUtils-3c9047c4.js","./jsonUtils-27937179.js","./layerUtils-eef15b39.js","./styleUtils-689841ac.js","./jsonUtils-9b4d797d.js","./DictionaryLoader-1c3435ac.js","./LRUCache-86d9ad15.js","./MemCache-b4d68123.js","./deprecate-ba25fc78.js","./heatmapUtils-8ee685fd.js","./vec4f64-6d0e93be.js","./MultiOriginJSONSupport-06f8f24a.js","./serviceCapabilitiesUtils-22f436bd.js","./arcgisLayerUrl-1b8d6c52.js","./FeatureLayerBase-633118ca.js","./Field-945b2973.js","./fieldType-24ac97df.js","./HeightModelInfo-73f516f9.js","./OperationalLayer-db187f46.js","./TimeExtent-64e16588.js","./ElevationInfo-005ddd87.js","./TimeReference-adaa7961.js","./datetime-eed49b9b.js","./AttachmentQuery-f1085685.js","./Query-b0193ce7.js","./RelationshipQuery-765b2184.js","./Layer-524734fa.js","./HandleOwner-6217a02e.js","./workers-c8fc8d43.js","./Connection-3d9fb42e.js","./assets-94d592bf.js","./intl-87d72dbe.js","./messages-1516d146.js","./editsZScale-9d0832b8.js","./queryZScale-f6e44ca7.js","./zscale-baa108ea.js","./FeatureSet-b4fbf079.js","./APIKeyMixin-ef4ccb38.js","./ArcGISService-24587a68.js","./BlendLayer-793ff14a.js","./mat4f32-60a2394b.js","./mat4-f0dc8788.js","./CustomParametersMixin-2798ec18.js","./EditBusLayer-b1010019.js","./FeatureReductionLayer-5ef01ce2.js","./labelingInfo-e65ecbf4.js","./labelUtils-b68da70f.js","./defaultsJSON-59981e75.js","./OrderedLayer-045186a6.js","./PortalLayer-d69e402d.js","./asyncUtils-24bd37b2.js","./PortalItem-4d7e1038.js","./portalItemUtils-0655aa33.js","./projection-4ac247db.js","./RefreshableLayer-12bc7ba2.js","./ScaleRangeLayer-d1b04b80.js","./TemporalLayer-f231f22a.js","./FeatureTemplate-5a472038.js","./FeatureType-017f886c.js","./fieldProperties-7a0757a8.js","./FieldsIndex-113320d3.js","./versionUtils-9a1e7983.js","./styleUtils-5c617777.js","./TopFeaturesQuery-d2b31d08.js","./popupUtils-b8625101.js"],import.meta.url)).default({url:e}),{capabilities:r}=await t.load(),s=r.query.supportsMaxRecordCountFactor,o=r.query.supportsPagination,n=r.query.supportsCentroid,l=this._config.maxRecordCountFactor,d=t.capabilities.query.maxRecordCount,u=s?d*l:d,i=new W;if(i.outFields=C(this._config.outFields,["*"]),i.where=C(E(this._config.filter,"where"),"1=1"),i.returnGeometry=!0,i.returnExceededLimitFeatures=!0,i.outSpatialReference=q.fromJSON(this._config.spatialReference),n&&(i.returnCentroid=!0),s&&(i.maxRecordCountFactor=l),o)return i.num=u,t.destroy(),this._queryPages(e,i);const w=await v(e,i,this._config.sourceSpatialReference);return t.destroy(),w.data}async _queryPages(e,t,r=[],s=0){t.start=h(t.num)?s*t.num:null;const{data:o}=await v(e,t,this._config.sourceSpatialReference);return o.exceededTransferLimit&&s<(this._config.maxQueryDepth??0)?(o.features.forEach(n=>r.push(n)),this._queryPages(e,t,r,s+1)):(r.forEach(n=>o.features.push(n)),o)}_addRelatedFeatures(e){const t=new Map,r=e.features,s=this._serviceDefinition.relatedFeatures.joinField;for(const o of r){const n=o.attributes[s];t.set(n,o)}this._relatedFeatures=t}};k=f([b("esri.layers.graphics.sources.connections.GeoEventConnection")],k);const D=k;let y=class extends L{constructor(e){super(),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._featureZScaler=x(t,s,r)}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)h(this._featureZScaler)&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};f([_()],y.prototype,"connectionStatus",void 0),f([_()],y.prototype,"errorString",void 0),y=f([b("esri.layers.support.ClientSideConnection")],y);function ye(e,t,r,s,o,n,l,d){const u={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:s,filter:o,maxReconnectionAttempts:n,maxReconnectionInterval:l,customParameters:d};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new m(u):new D(u):new y(u)}export{ye as createConnection};
