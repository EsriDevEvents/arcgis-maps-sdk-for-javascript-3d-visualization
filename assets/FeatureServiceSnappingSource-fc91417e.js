import{e as o,y as n,a as _,v as k,t as M,n as R,_ as $}from"./jsonMap-ffa742d3.js";import{d as E,a as N}from"./HandleOwner-6217a02e.js";import{r as d,t as H,o as x,g as U,T as j}from"./typedArrayUtil-bf9f210a.js";import{y as A,f as C,g as f}from"./promiseUtils-5940888c.js";import{l as w,U as z,h as S,a as J}from"./reactiveUtils-53e5756b.js";import"./ArrayPool-b51874dd.js";import{t as D,p as V}from"./Scheduler-61737382.js";import{y as Z}from"./elevationInfoUtils-d3b9d588.js";import{t as T,j as L,p as q}from"./TileInfo-9973cd47.js";import{o as W}from"./vec3-8818fe1c.js";import{n as G}from"./vec4f64-6d0e93be.js";import{bk as B,cb as Q,cc as K,J as X,cd as Y}from"./SceneView-7ac05f56.js";import{i as tt,p as et}from"./queryEngineUtils-19dae172.js";import{v as it}from"./Polyline-82cb63bc.js";import{f as rt,o as ot}from"./aaBoundingRect-2fb32e32.js";import{b as nt}from"./TileTreeDebugger-66028ce4.js";import{h as st}from"./LercDecoder-f1486af7.js";import{o as at}from"./typeUtils-1714017f.js";import{M as pt}from"./dehydratedFeatures-efdbcd90.js";import{w as lt}from"./Extent-22afa84a.js";import"./string-53224faa.js";import"./Error-5cdd6e0a.js";import"./nextTick-3ee5a785.js";import"./SimpleObservable-bd2c3ae8.js";import"./ElevationInfo-005ddd87.js";import"./fieldUtils-d430f46c.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-dd48afd7.js";import"./geometry-7d866d3f.js";import"./lengthUtils-3c9047c4.js";import"./Ellipsoid-89682c5e.js";import"./common-d0b63c2d.js";import"./Clonable-7fa7ad97.js";import"./Cyclical-47bda305.js";import"./mathUtils-ae09f98b.js";import"./vec4-c7a19f0d.js";import"./Graphic-5dcfa25e.js";import"./PopupTemplate-81dc9b83.js";import"./Collection-74ae958a.js";import"./Evented-686173eb.js";import"./enumeration-925aa0f6.js";import"./number-036ac4ef.js";import"./locale-fe7cc1d0.js";import"./Identifiable-e4f9b04c.js";import"./symbols-5f42cb0e.js";import"./CIMSymbol-8f55d4ab.js";import"./Color-7b46c33a.js";import"./colorUtils-639f4d25.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-d4a4b602.js";import"./symbolLayerUtils3D-5cf2dcce.js";import"./aaBoundingBox-fb003858.js";import"./request-09e7d9b2.js";import"./persistableUrlUtils-3635dccc.js";import"./Symbol3DAnchorPosition2D-e9d8a8f4.js";import"./collectionUtils-423a192d.js";import"./Portal-8dfa7a94.js";import"./Loadable-40ecd3b9.js";import"./Promise-755e47e5.js";import"./PortalGroup-00fb77a4.js";import"./PortalUser-9579f611.js";import"./jsonUtils-36bf3d33.js";import"./widget-01c21b51.js";import"./intl-87d72dbe.js";import"./messages-1516d146.js";import"./assets-94d592bf.js";import"./uuid-73213768.js";import"./workers-c8fc8d43.js";import"./Connection-3d9fb42e.js";import"./GraphicsLayer-cbd6e467.js";import"./Layer-524734fa.js";import"./BlendLayer-793ff14a.js";import"./mat4f32-60a2394b.js";import"./mat4-f0dc8788.js";import"./ScaleRangeLayer-d1b04b80.js";import"./HeightModelInfo-73f516f9.js";import"./projection-4ac247db.js";import"./zscale-baa108ea.js";import"./sphere-a48b65b1.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./quatf64-f8f1c132.js";import"./vec2f64-70cfd09e.js";import"./lineSegment-4eb8b6fa.js";import"./plane-01584357.js";import"./spatialReferenceEllipsoidUtils-88aa82c4.js";import"./scaleUtils-a3b834c2.js";import"./layerUtils-eef15b39.js";import"./AttachmentInfo-23249301.js";import"./AttachmentQuery-f1085685.js";import"./ColorStop-29c89bbb.js";import"./utils-6a5cc1bf.js";import"./asyncUtils-24bd37b2.js";import"./ItemCache-e927309e.js";import"./MemCache-b4d68123.js";import"./jsonUtils-9b4d797d.js";import"./UniqueValueRenderer-80c8e628.js";import"./diffUtils-1bae97a1.js";import"./colorRamps-18bbdf60.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-61985981.js";import"./compilerUtils-7bf6df9e.js";import"./jsonUtils-27937179.js";import"./styleUtils-689841ac.js";import"./DictionaryLoader-1c3435ac.js";import"./LRUCache-86d9ad15.js";import"./deprecate-ba25fc78.js";import"./heatmapUtils-8ee685fd.js";import"./Query-b0193ce7.js";import"./TimeExtent-64e16588.js";import"./Field-945b2973.js";import"./fieldType-24ac97df.js";import"./executeQueryJSON-044ac84b.js";import"./normalizeUtils-353ec0fc.js";import"./normalizeUtilsCommon-d8ea404e.js";import"./query-b4dff312.js";import"./pbfQueryUtils-481b10bc.js";import"./pbf-845dcafd.js";import"./OptimizedFeature-3e582950.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-f6e44ca7.js";import"./FeatureSet-b4fbf079.js";import"./featureConversionUtils-aead6959.js";import"./RelationshipQuery-765b2184.js";import"./TopFeaturesQuery-d2b31d08.js";import"./FeatureLayer-e767d294.js";import"./MultiOriginJSONSupport-06f8f24a.js";import"./serviceCapabilitiesUtils-22f436bd.js";import"./arcgisLayerUrl-1b8d6c52.js";import"./FeatureLayerBase-633118ca.js";import"./OperationalLayer-db187f46.js";import"./TimeReference-adaa7961.js";import"./datetime-eed49b9b.js";import"./editsZScale-9d0832b8.js";import"./APIKeyMixin-ef4ccb38.js";import"./ArcGISService-24587a68.js";import"./CustomParametersMixin-2798ec18.js";import"./EditBusLayer-b1010019.js";import"./FeatureReductionLayer-5ef01ce2.js";import"./labelingInfo-e65ecbf4.js";import"./labelUtils-b68da70f.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-045186a6.js";import"./PortalLayer-d69e402d.js";import"./PortalItem-4d7e1038.js";import"./portalItemUtils-0655aa33.js";import"./RefreshableLayer-12bc7ba2.js";import"./TemporalLayer-f231f22a.js";import"./FeatureTemplate-5a472038.js";import"./FeatureType-017f886c.js";import"./fieldProperties-7a0757a8.js";import"./FieldsIndex-113320d3.js";import"./versionUtils-9a1e7983.js";import"./styleUtils-5c617777.js";import"./popupUtils-b8625101.js";import"./callExpressionWithFeature-eb5719d8.js";import"./quantizationUtils-16db4e0b.js";import"./ElevationSamplerData-3fc2a90f.js";import"./Basemap-5a7c72ee.js";import"./loadAll-8ca49458.js";import"./writeUtils-b7104d82.js";import"./CollectionFlattener-80d223f1.js";import"./TablesMixin-8f62a14c.js";import"./ViewingMode-5d7d590b.js";import"./vec2-848c6cf0.js";import"./PhysicallyBasedRendering.glsl-edd81ba9.js";import"./View.glsl-879c1eaf.js";import"./ShaderBuilder-be7ca791.js";import"./FloatPassUniform-0426669b.js";import"./Float4PassUniform-9354414b.js";import"./RgbaFloatEncoding.glsl-67199794.js";import"./Texture2DPassUniform-268e8d2d.js";import"./vec3f32-01c06d8d.js";import"./VertexAttribute-15d1866a.js";import"./Texture2DDrawUniform-e4341b84.js";import"./basicInterfaces-7449a8bf.js";import"./PiUtils.glsl-49462ceb.js";import"./ReadLinearDepth.glsl-0e6f5c47.js";import"./WaterSurface.glsl-e13d44e2.js";import"./ForwardLinearDepth.glsl-52bf5bdc.js";import"./Matrix3PassUniform-df6e2166.js";import"./Slice.glsl-cd30f0ea.js";import"./Transform.glsl-052069d0.js";import"./OutputHighlight.glsl-ca02d1ee.js";import"./MultipassTerrainTest.glsl-8b279fcd.js";import"./NormalUtils.glsl-84d184a7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-c3841b0a.js";import"./EvaluateSceneLighting.glsl-14c608ff.js";import"./VisualVariablePassParameters-f892560d.js";import"./enums-fc527c7c.js";import"./VertexElementDescriptor-2925c6af.js";import"./Texture-d2fa6cd8.js";import"./context-util-34d303b7.js";import"./Util-513876a8.js";import"./SSAOBlur.glsl-c56632c0.js";import"./ScreenSpacePass.glsl-44cc0c5e.js";import"./SSAO.glsl-2c6533cd.js";import"./ShaderTechniqueConfiguration-0fa0f78c.js";import"./mat3-4fd89d48.js";import"./HUD.glsl-73b068b4.js";import"./VerticalOffset.glsl-109e8746.js";import"./Octree-813f29c9.js";import"./objectResourceUtils-3685cb27.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-b402c7a7.js";import"./vec33-ca555933.js";import"./DefaultMaterial_COLOR_GAMMA-8ec4380b.js";import"./types-e1c0a5bf.js";import"./Version-621cc6b7.js";import"./quat-77a0169c.js";import"./resourceUtils-527631ac.js";import"./Indices-f9b34f39.js";import"./DefaultMaterial.glsl-58ca0075.js";import"./MixExternalColor.glsl-f5c601ed.js";import"./symbolColorUtils-1c63720c.js";import"./ObjectAndLayerIdColor.glsl-66083f64.js";import"./OutputDepth.glsl-17bf0574.js";import"./VisualVariables.glsl-bb97d5ba.js";import"./DiscardOrAdjustAlphaBlend.glsl-27f02ebd.js";import"./VertexColor.glsl-2f905a78.js";import"./Normals.glsl-6a1bc6fb.js";import"./vec2f32-eaf29605.js";import"./Texture-ae652f15.js";import"./TextureOnly.glsl-469cc321.js";import"./Attribute-f72d3f37.js";import"./InterleavedLayout-07cc6753.js";import"./DefaultTechniqueConfiguration-b54ae0b1.js";import"./RealisticTree.glsl-29f7cbd7.js";import"./edgeProcessing-ac701714.js";import"./deduplicate-a70aec6f.js";import"./MeshComponent-777de3ff.js";import"./earcut-61f7b102.js";import"./projection-03824933.js";import"./HUDMaterial.glsl-82200888.js";import"./sdfPrimitives-3ceeab79.js";import"./floatRGBA-1f66d0a4.js";import"./labelFormatUtils-f90ee62f.js";import"./orientedBoundingBox-6188c4d9.js";import"./quatf32-51a323b8.js";import"./LineCallout.glsl-76cd336e.js";import"./SnappingCandidate-970faec6.js";import"./MarkerSizing.glsl-950a18f6.js";import"./RibbonLine.glsl-8fe4662b.js";import"./LineStipple.glsl-4eef2aea.js";import"./LineMarker.glsl-2c017de2.js";import"./NativeLine.glsl-9893bc56.js";import"./Path.glsl-2eb74a31.js";import"./ColorMaterial.glsl-1d45c81e.js";import"./Pattern.glsl-698f2083.js";import"./enums-fb086c25.js";import"./config-f7904f35.js";import"./TileKey-4d1284e4.js";import"./workerHelper-2d7b0d57.js";import"./capabilities-caaa1278.js";import"./DimensionAnalysisView3D-fb9d1281.js";import"./LineVisualElement-4382615e.js";import"./LengthDimension-0b9dbf47.js";import"./Segment-0dc6a9a8.js";import"./analysisViewUtils-61ca3438.js";import"./ImageMaterial-771bdfd8.js";import"./ImageMaterial.glsl-2e22ba6f.js";import"./Factory-3a66d8bc.js";import"./RightAngleQuadVisualElement-c08b83c3.js";import"./VisualElementResources-b6496e82.js";import"./PointVisualElement-f510cbef.js";import"./colorUtils-c0f43caf.js";import"./EditGeometryOperations-0df36f69.js";import"./QueryEngineResult-0c6179e0.js";import"./WhereClause-0699a2ca.js";import"./executionError-fb3f283a.js";import"./utils-95e81b90.js";import"./generateRendererUtils-e34cc2cf.js";import"./json-48e3ea08.js";import"./dehydratedFeatureComparison-e523fe14.js";import"./RenderTexture-b7e204b5.js";import"./VertexSnappingCandidate-ef5381f7.js";function I(t,e){return Q(e.extent,F),K(F,W(mt,t.x,t.y,0))}const F=B(),mt=G();let h=class extends k{get tiles(){const e=this.tilesCoveringView,i=d(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort((s,r)=>I(i,s)-I(i,r)),e}_scaleEnabled(){return X(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||H(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:i}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:s}=i,r=[];for(const{row:p,colFrom:a,colTo:l}of e)for(let c=a;c<=l;c++){const v=i.normalizeCol(c),b=new T(null,s,p,v);this.tileInfo.updateTileInfo(b),r.push(b)}return r}get tileInfo(){var e;return((e=this.view.featuresTilingScheme)==null?void 0:e.tileInfo)??null}get tileSize(){return d(this.tileInfo)?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(w(()=>{var e,i;return(i=(e=this.view)==null?void 0:e.state)==null?void 0:i.viewpoint},()=>this.notifyChange("tilesCoveringView"),z))}};o([n({readOnly:!0})],h.prototype,"tiles",null),o([n({readOnly:!0})],h.prototype,"_scaleEnabled",null),o([n({readOnly:!0})],h.prototype,"tilesCoveringView",null),o([n({readOnly:!0})],h.prototype,"tileInfo",null),o([n({readOnly:!0})],h.prototype,"tileSize",null),o([n({constructOnly:!0})],h.prototype,"view",void 0),o([n({constructOnly:!0})],h.prototype,"layer",void 0),o([n()],h.prototype,"pointOfInterest",void 0),h=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],h);let y=class extends E{get tiles(){const t=this.tilesCoveringView,e=this._effectivePointOfInterest;if(d(e)){const i=t.map(s=>I(e,s));for(let s=1;s<i.length;s++)if(i[s-1]>i[s])return t.sort((r,p)=>I(e,r)-I(e,p)),t.slice()}return t}get tilesCoveringView(){var t,e;return this._filterTiles((e=(t=this.view.featureTiles)==null?void 0:t.tiles)==null?void 0:e.toArray()).map(dt)}get tileInfo(){var t;return((t=this.view.featureTiles)==null?void 0:t.tilingScheme.toTileInfo())??null}get tileSize(){var t;return((t=this.view.featureTiles)==null?void 0:t.tileSize)??256}get _effectivePointOfInterest(){var e;const t=this.pointOfInterest;return d(t)?t:(e=this.view.pointsOfInterest)==null?void 0:e.focus.location}constructor(t){super(t),this.pointOfInterest=null}initialize(){this.handles.add(w(()=>this.view.featureTiles,t=>{this.handles.remove(P),t&&this.handles.add(t.addClient(),P)},S))}_filterTiles(t){return H(t)?[]:t.filter(e=>Math.abs(e.measures.screenRect[3]-e.measures.screenRect[1])>ut&&e.measures.visibility===Y.VISIBLE_ON_SURFACE)}};function dt({lij:[t,e,i],extent:s}){return new T(`${t}/${e}/${i}`,t,e,i,s)}o([n({readOnly:!0})],y.prototype,"tiles",null),o([n({readOnly:!0})],y.prototype,"tilesCoveringView",null),o([n({readOnly:!0})],y.prototype,"tileInfo",null),o([n({readOnly:!0})],y.prototype,"tileSize",null),o([n({constructOnly:!0})],y.prototype,"view",void 0),o([n()],y.prototype,"pointOfInterest",void 0),o([n()],y.prototype,"_effectivePointOfInterest",null),y=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],y);const ut=50,P="feature-tiles";let O=class extends nt{constructor(t){super(t),this._handles=new M}initialize(){const t=setInterval(()=>this._fetchDebugInfo(),2e3);this._handles.add(R(()=>clearInterval(t)))}destroy(){this._handles.destroy()}getTiles(){if(!this._debugInfo)return[];const t=new Map,e=new Map;this._debugInfo.storedTiles.forEach(r=>{t.set(r.data.id,r.featureCount)}),this._debugInfo.pendingTiles.forEach(r=>{t.set(r.data.id,r.featureCount),e.set(r.data.id,r.state)});const i=r=>{const p=e.get(r),a=t.get(r)??"?";return p?`${p}:${a}
${r}`:`store:${a}
${r}`},s=new Map;return this._debugInfo.storedTiles.forEach(r=>{s.set(r.data.id,r.data)}),this._debugInfo.pendingTiles.forEach(r=>{s.set(r.data.id,r.data)}),Array.from(s.values()).map(r=>({lij:[r.level,r.row,r.col],geometry:it.fromExtent(rt(r.extent,this.view.spatialReference)),label:i(r.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(t=>{this._debugInfo=t,this.update()})}};o([n({constructOnly:!0})],O.prototype,"handle",void 0),O=o([_("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],O);let m=class extends E{get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}constructor(t){super(t),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async e=>{const i=[];for(const{points:s}of e)for(const{z:r}of s)i.push(r);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0}destroy(){this._workerHandle.destroy()}initialize(){this._workerHandle=new ht(this.schedule,{alignElevation:async(t,{signal:e})=>({result:await this.elevationAlignPointsInFeatures(t.points,e)}),getSymbologyCandidates:async(t,{signal:e})=>({result:await this.queryForSymbologySnapping(t,e)})}),this.handles.add([this._workerHandle.on("notify-updating",({updating:t})=>this._workerHandleUpdating=t),this._workerHandle.on("notify-availability",({availability:t})=>this._set("availability",t))])}async setup(t,e){var r;const i=this._serviceInfoFromLayer(t.layer);if(H(i))return;const s={configuration:this._convertConfiguration(t.configuration),serviceInfo:i,spatialReference:t.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(r=t.layer.elevationInfo)==null?void 0:r.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",s,e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async configure(t,e){const i=this._convertConfiguration(t);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async refresh(t){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async fetchCandidates(t,e){const i=t.point,s={distance:t.distance,mode:t.mode,point:pt(i[0],i[1],i[2],t.coordinateHelper.spatialReference.toJSON()),types:t.types,filter:d(t.filter)?t.filter.toJSON():null};return this._workerHandle.invoke(s,e)}async updateTiles(t,e){const i={tiles:t.tiles,tileInfo:d(t.tileInfo)?t.tileInfo.toJSON():null,tileSize:t.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async applyEdits(t,e){var a,l,c;const i=this._editId++,s={id:i};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",s,e));const r=await this.updatingHandles.addPromise(A(t.result,e)),p={id:i,edits:{addedFeatures:((a=r.addedFeatures)==null?void 0:a.map(({objectId:v})=>v).filter(d))??[],deletedFeatures:((l=r.deletedFeatures)==null?void 0:l.map(({objectId:v,globalId:b})=>({objectId:v,globalId:b})))??[],updatedFeatures:((c=r.updatedFeatures)==null?void 0:c.map(({objectId:v})=>v).filter(d))??[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",p,e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}getDebugInfo(t){return this._workerHandle.invokeMethod("getDebugInfo",{},t)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(t){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",t)}_convertConfiguration(t){return{filter:d(t.filter)?t.filter.toJSON():null,customParameters:t.customParameters,viewType:t.viewType}}_serviceInfoFromLayer(t){var e,i;return t.geometryType==="multipatch"||t.geometryType==="mesh"?null:{url:((e=t.parsedUrl)==null?void 0:e.path)??"",fields:t.fields.map(s=>s.toJSON()),geometryType:at.toJSON(t.geometryType),capabilities:t.capabilities,objectIdField:t.objectIdField,globalIdField:t.globalIdField,spatialReference:t.spatialReference.toJSON(),timeInfo:(i=t.timeInfo)==null?void 0:i.toJSON()}}};o([n({constructOnly:!0})],m.prototype,"schedule",void 0),o([n({constructOnly:!0})],m.prototype,"hasZ",void 0),o([n({constructOnly:!0})],m.prototype,"elevationAlignPointsInFeatures",void 0),o([n({constructOnly:!0})],m.prototype,"queryForSymbologySnapping",void 0),o([n({readOnly:!0})],m.prototype,"updating",null),o([n({readOnly:!0})],m.prototype,"availability",void 0),o([n()],m.prototype,"_workerHandleUpdating",void 0),m=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],m);class ht extends st{constructor(e,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:i})}}let g=class extends k{get tiles(){return[new T("0/0/0",0,0,0,ot(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new L({origin:new lt({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new q({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(t){super(t),this.pointOfInterest=null}};o([n({readOnly:!0})],g.prototype,"tiles",null),o([n({readOnly:!0})],g.prototype,"tileInfo",null),o([n({readOnly:!0})],g.prototype,"tileSize",null),o([n({constructOnly:!0})],g.prototype,"layer",void 0),o([n()],g.prototype,"pointOfInterest",void 0),g=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],g);let u=class extends N(k){get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){var t;return((t=this._workerHandle)==null?void 0:t.updating)||this.updatingHandles.updating}get configuration(){const{view:t}=this,e=d(t)?t.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:e}}get availability(){var t;return((t=this._workerHandle)==null?void 0:t.availability)??0}get _layer(){return this.layerSource.layer}constructor(t){super(t),this._workerHandle=null,this._debug=null}initialize(){let t;const e=this.view;if(d(e))switch(e.type){case"2d":this._tilesOfInterest=new h({view:e,layer:this._layer}),t=this._workerHandle=new m;break;case"3d":{const{resourceController:i}=e,s=this._layer,r=e.whenLayerView(s);this._tilesOfInterest=new y({view:e}),t=this._workerHandle=new m({schedule:a=>i.immediate.schedule(a),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(a,l)=>{const c=await r;return C(l),c.elevationAlignPointsInFeatures(a,l)},queryForSymbologySnapping:async(a,l)=>{const c=await r;return C(l),c.queryForSymbologySnapping(a,l)}});const p=new D(null);r.then(a=>p.set(a)),this.addHandles([e.elevationProvider.on("elevation-change",({context:a})=>{const{elevationInfo:l}=s;Z(a,l)&&f(t.notifyElevationSourceChange())}),w(()=>s.elevationInfo,()=>f(t.notifyElevationSourceChange()),S),w(()=>x(p.get(),({processor:a})=>a==null?void 0:a.renderer),()=>f(t.notifySymbologyChange()),S),w(()=>U(p.get(),!1,a=>a.symbologySnappingSupported),a=>f(t.setSymbologySnappingSupported(a)),S),J(()=>{var a;return(a=j(p.get()))==null?void 0:a.layer},["edits","apply-edits","graphic-update"],()=>t.notifySymbologyChange())]);break}}else this._tilesOfInterest=new g({layer:this._layer}),t=this._workerHandle=new m;this.handles.add([$(t)]),f(t.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this.updatingHandles.add(()=>this._updateTilesParameters,()=>f(t.updateTiles(this._updateTilesParameters,null)),S),this.handles.add([w(()=>this.configuration,i=>f(t.configure(i,null)),z)]),d(e)&&this.handles.add(w(()=>V.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new O({view:e,handle:t}),this.handles.add($(this._debug),"debug")):!i&&this._debug&&this.handles.remove("debug")},S)),this.handles.add(this.layerSource.layer.on("apply-edits",i=>{f(t.applyEdits(i,null))}))}refresh(){var t;(t=this._workerHandle)==null||t.refresh(null)}async fetchCandidates(t,e){const{coordinateHelper:i,point:s}=t;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(s);const r=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...t},e)).candidates.map(p=>tt(p,r))}getDebugInfo(t){return this._workerHandle.getDebugInfo(t)}get _getGroundElevation(){return et(this.view)}};o([n({constructOnly:!0})],u.prototype,"spatialReference",void 0),o([n({constructOnly:!0})],u.prototype,"layerSource",void 0),o([n({constructOnly:!0})],u.prototype,"view",void 0),o([n()],u.prototype,"_tilesOfInterest",void 0),o([n({readOnly:!0})],u.prototype,"_updateTilesParameters",null),o([n({readOnly:!0})],u.prototype,"updating",null),o([n({readOnly:!0})],u.prototype,"configuration",null),o([n({readOnly:!0})],u.prototype,"availability",null),o([n()],u.prototype,"_getGroundElevation",null),u=o([_("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],u);export{u as FeatureServiceSnappingSource};
